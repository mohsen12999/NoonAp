{"version":3,"sources":["actions/actionTypes.ts","components/pages/mainPage/page-cart.tsx","actions/shop.ts","components/pages/mainPage/Main.tsx","components/pages/NotFound.tsx","components/pages/About.tsx","components/headers/mini-header.tsx","components/headers/big-header.tsx","components/headers/main-header.tsx","components/App.tsx","serviceWorker.ts","reducers/pages.ts","reducers/levels.ts","reducers/initialState.ts","reducers/mainReducer.ts","reducers/rootReducer.ts","store/Store.tsx","index.tsx"],"names":["ActionTypes","useStyles","makeStyles","theme","card","display","details","flexDirection","content","flex","cover","width","backgroundSize","controls","alignItems","paddingLeft","spacing","paddingBottom","playIcon","height","persianfont","fontFamily","PageCart","title","subtitle","img","classes","useTheme","console","log","Card","className","CardMedia","image","CardContent","Typography","component","variant","color","PRODUCT_GROUPS","id","persianTitle","persianSubtitle","enable","root","flexGrow","paper","padding","textAlign","palette","text","secondary","link","textDecoration","Main","groups","Container","maxWidth","Grid","container","justify","map","group","key","item","xs","href","NotFound","About","createStyles","menuButton","marginLeft","list","fullList","menuTitle","MiniHeader","side","React","useState","top","left","bottom","right","state","setState","toggleDrawer","open","event","type","AppBar","position","Toolbar","IconButton","edge","aria-label","onClick","Drawer","anchor","onClose","role","onKeyDown","List","ListItem","button","ListItemIcon","ListItemText","primary","Divider","tab","titleImg","verticalAlign","BigHeader","value","setValue","src","alt","Paper","Tabs","onChange","newValue","indicatorColor","textColor","centered","Tab","label","MainHeader","window","innerWidth","isMobile","setIsMobile","useEffect","addEventListener","App","exact","path","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","AppPages","init","pageName","GAME_PAGE_N2","levels","levelId","levelName","levelWords","worldsCount","displayWordsCount","locked","MainReducer","initialState","action","CHANGE_PAGE","newPage","payload","GAME_PAGE","combineReducers","Cart","middleware","thunk","enhancer","composeWithDevTools","composeEnhancers","applyMiddleware","store","createStore","rootReducer","ReactDOM","render","document","getElementById","URL","process","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.15855a6b.chunk.js","sourcesContent":["\nexport enum ActionTypes {\n    CHANGE_PAGE = \"CHANGE_PAGE\",\n    CHANGE_STAGE = \"CHANGE_STAGE\",\n    PAUSE_GAME = \"PAUSE_GAME\",\n    RESUME_PAGE = \"RESUME_PAGE\"\n}","import React from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    display: \"flex\"\n  },\n  details: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  content: {\n    flex: \"1 0 auto\"\n  },\n  cover: {\n    width: \"30%\",\n    backgroundSize: \"contain\"\n  },\n  controls: {\n    display: \"flex\",\n    alignItems: \"center\",\n    paddingLeft: theme.spacing(1),\n    paddingBottom: theme.spacing(1)\n  },\n  playIcon: {\n    height: 38,\n    width: 38\n  },\n  persianfont: {\n    fontFamily: \"Yekan\"\n  }\n}));\n\ninterface IPageCartProp {\n  title: string;\n  subtitle: string;\n  img: string;\n}\n\nconst PageCart: React.FC<IPageCartProp> = ({ title, subtitle, img }) => {\n  // const PageCart: React.FC = (title: string, subtitle: string, img: string) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  console.log(title, subtitle, img);\n\n  return (\n    <Card className={classes.card}>\n      <CardMedia\n        className={classes.cover}\n        image={\"/\" + img} //\"/images/group/shopping-cart.png\"\n        title=\"Live from space album cover\"\n      />\n\n      <div className={classes.details}>\n        <CardContent className={classes.content}>\n          <Typography\n            className={classes.persianfont}\n            component=\"h5\"\n            variant=\"h5\"\n          >\n            {title}\n          </Typography>\n          <Typography\n            className={classes.persianfont}\n            variant=\"subtitle1\"\n            color=\"textSecondary\"\n          >\n            {subtitle}\n          </Typography>\n        </CardContent>\n      </div>\n    </Card>\n  );\n};\n\nexport default PageCart;\n\n/*\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles({\n  card: {\n    maxWidth: \"100%\"\n  },\n  media: {\n    height: 140\n  }\n});\n\nexport default function MediaCard() {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.card}>\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          // image=\"/images/group/shopping-cart.png\"\n          image={process.env.PUBLIC_URL + \"/images/group/shopping-cart.png\"}\n          title=\"Contemplative Reptile\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            Lizard\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            Lizards are a widespread group of squamate reptiles, with over 6,000\n            species, ranging across all continents except Antarctica\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n}\n*/\n","import { ActionTypes } from \"./actionTypes\";\nimport { Dispatch } from \"redux\";\nimport { AppPages } from \"../reducers/pages\";\n\n// export const scorePage = () => dispatch => {\n//     //...\n//     dispatch({\n//         type: SCORE_PAGE,\n//         payload: []\n//     })\n// }\n\nexport const changePage: Function = (\n  event: React.MouseEvent<HTMLButtonElement>,\n  newPage: AppPages,\n  levelId: number\n) => (dispatch: Dispatch) => {\n  event.stopPropagation();\n  dispatch({\n    type: ActionTypes.CHANGE_PAGE,\n    payload: { levelId, newPage }\n  });\n};\n\n// interfaces\nexport interface IProductGroup {\n  id: number;\n  title: string;\n  persianTitle: string;\n  persianSubtitle: string;\n  img: string;\n  enable: boolean;\n  // \"products\": IProductSpecific[];\n}\n\nexport interface IProductSpecific {\n  id: number;\n  title: string;\n  price: number;\n  inventory: number;\n  img: string;\n  enable: boolean;\n  productGroupId: number;\n}\n\nexport interface IDeliverTime {\n  id: number;\n  title: string;\n  start: number;\n  end: number;\n}\n\n// values\nexport const PRODUCT_GROUPS: IProductGroup[] = [\n  {\n    id: 1,\n    title: \"Breads\",\n    persianTitle: \"نان تازه\",\n    persianSubtitle: \"خرید نان تازه و گرم\",\n    img: \"images/group/bread.png\",\n    enable: true\n  },\n  {\n    id: 2,\n    title: \"Market\",\n    persianTitle: \"سوپر مارکت\",\n    persianSubtitle: \"انتخاب و خرید مواد غذایی\",\n    img: \"images/group/shopping-cart.png\",\n    enable: false\n  },\n  {\n    id: 3,\n    title: \"FastFoods\",\n    persianTitle: \"فست فود\",\n    persianSubtitle: \"سفارش غذا از فست فود و کافه\",\n    img: \"images/group/fast-food.png\",\n    enable: false\n  },\n  {\n    id: 4,\n    title: \"Restaurants\",\n    persianTitle: \"رستوران\",\n    persianSubtitle: \"سفارش غذاهای ایرانی و محلی\",\n    img: \"images/group/resturant.png\",\n    enable: false\n  },\n  {\n    id: 5,\n    title: \"Souvenir\",\n    persianTitle: \"سوغات\",\n    persianSubtitle: \"صنایع دستی محلی و بومی\",\n    img: \"images/group/souvenir.png\",\n    enable: false\n  },\n  {\n    id: 6,\n    title: \"Discount\",\n    persianTitle: \"تخفیفان رامسر\",\n    persianSubtitle: \"تخفیف های باورنکردنی از همه چیز\",\n    img: \"images/group/discount.png\",\n    enable: false\n  }\n];\n\nexport const PRODUCT_LIST: IProductSpecific[] = [\n  // - Breads\n  {\n    id: 1,\n    title: \"بربری آزاد ساده\",\n    price: 1500,\n    inventory: 30,\n    img: \"../images/noon/barbari-192.png\",\n    enable: true,\n    productGroupId: 1\n  },\n  {\n    id: 2,\n    title: \"بربری آزاد کنجدی\",\n    price: 2000,\n    inventory: 30,\n    img: \"../images/noon/barbari-konjedi-192.png\",\n    enable: false,\n    productGroupId: 1\n  },\n  {\n    id: 3,\n    title: \"سنگک آزاد ساده\",\n    price: 1500,\n    inventory: 30,\n    img: \"../images/noon/sangak-192.png\",\n    enable: false,\n    productGroupId: 1\n  },\n  {\n    id: 4,\n    title: \"سنگک آزاد کنجدی\",\n    price: 2000,\n    inventory: 30,\n    img: \"../images/noon/sangak-konjedi-192.png\",\n    enable: false,\n    productGroupId: 1\n  },\n  {\n    id: 5,\n    title: \"لواش\",\n    price: 250,\n    inventory: 100,\n    img: \"../images/noon/lavash-192.png\",\n    enable: false,\n    productGroupId: 1\n  }\n];\n\nexport const TIME_LIST: IDeliverTime[] = [\n  { id: 1, title: \"6:00 تا 7:00 صبح\", start: 6, end: 7 },\n  { id: 2, title: \"7:00 تا 8:00 صبح\", start: 7, end: 8 },\n  { id: 3, title: \"8:00 تا 10:00 صبح\", start: 8, end: 10 },\n  { id: 4, title: \"17:00 تا 19:00 عصر\", start: 17, end: 19 },\n  { id: 5, title: \"19:00 تا 22:00 شب\", start: 19, end: 22 }\n];\n","import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport PageCart from \"./page-cart\";\n\nimport { PRODUCT_GROUPS, IProductGroup } from \"../../../actions/shop\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  },\n  link: {\n    textDecoration: \"none\"\n  }\n}));\n\nconst Main: React.FC = () => {\n  const classes = useStyles();\n\n  const groups: IProductGroup[] = PRODUCT_GROUPS;\n\n  return (\n    <Container maxWidth=\"md\">\n      <h3>main page</h3>\n      <Grid container spacing={3} justify=\"space-around\" alignItems=\"stretch\">\n        {groups.map(group => (\n          <Grid key={group.id} item xs={6}>\n            <a className={classes.link} href=\"#\">\n              <PageCart\n                title={group.persianTitle}\n                subtitle={group.persianSubtitle}\n                img={group.img}\n              />\n            </a>\n          </Grid>\n        ))}\n      </Grid>\n    </Container>\n  );\n};\n\nexport default Main;\n","\nimport React from \"react\";\n\nconst NotFound: React.FC = () => {\n  return (\n    <div>\n        <h3>NotFound page</h3>\n    </div>\n  );\n};\n\nexport default NotFound;","import React from \"react\";\n\nconst About: React.FC = () => {\n  return (\n    <div>\n        <h3>main page</h3>\n    </div>\n  );\n};\n\nexport default About;","import React from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\n\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nimport ViewModule from \"@material-ui/icons/ViewModule\";\nimport ImportantDevices from \"@material-ui/icons/ImportantDevices\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1\n    },\n    menuButton: {\n      marginLeft: theme.spacing(2)\n    },\n    title: {\n      flexGrow: 1,\n      fontFamily: \"Yekan\"\n    },\n    list: {\n      width: 250\n    },\n    fullList: {\n      width: \"auto\"\n    },\n    menuTitle: {\n      textAlign: \"right\"\n    }\n  })\n);\n\nconst MiniHeader: React.FC = () => {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false\n  });\n\n  type DrawerSide = \"top\" | \"left\" | \"bottom\" | \"right\";\n  const toggleDrawer = (side: DrawerSide, open: boolean) => (\n    event: React.KeyboardEvent | React.MouseEvent\n  ) => {\n    if (\n      event.type === \"keydown\" &&\n      ((event as React.KeyboardEvent).key === \"Tab\" ||\n        (event as React.KeyboardEvent).key === \"Shift\")\n    ) {\n      return;\n    }\n\n    setState({ ...state, [side]: open });\n  };\n\n  const sideList = (side: DrawerSide) => (\n    <div\n      className={classes.list}\n      role=\"presentation\"\n      onClick={toggleDrawer(side, false)}\n      onKeyDown={toggleDrawer(side, false)}\n    >\n      <List>\n        <ListItem button key=\"main\">\n          <ListItemIcon>\n            <ViewModule />\n          </ListItemIcon>\n          <ListItemText className={classes.menuTitle} primary=\"صفحه اصلی\" />\n        </ListItem>\n      </List>\n      <Divider />\n      <List>\n        <ListItem button key=\"main\">\n          <ListItemIcon>\n            <ImportantDevices />\n          </ListItemIcon>\n          <ListItemText className={classes.menuTitle} primary=\"درباره ما\" />\n        </ListItem>\n      </List>\n\n      {/* <List>\n        {[\"Inbox\", \"Starred\", \"Send email\", \"Drafts\"].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n            </ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n      <List>\n        {[\"All mail\", \"Trash\", \"Spam\"].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n            </ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List> */}\n    </div>\n  );\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n            onClick={toggleDrawer(\"right\", true)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            نون\n          </Typography>\n          <IconButton edge=\"end\" color=\"inherit\">\n            <MoreIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        anchor=\"right\"\n        open={state.right}\n        onClose={toggleDrawer(\"right\", false)}\n      >\n        {sideList(\"right\")}\n      </Drawer>\n    </div>\n  );\n};\nexport default MiniHeader;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\n\nconst useStyles = makeStyles({\n  title: {\n    textAlign: \"center\"\n  },\n  root: {\n    flexGrow: 1,\n    fontFamily: \"Yekan\"\n  },\n  tab: {\n    fontFamily: \"Yekan\"\n  },\n  titleImg: {\n    verticalAlign: \"middle\"\n  }\n});\n\nconst BigHeader: React.FC = () => {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  function handleChange(event: React.ChangeEvent<{}>, newValue: number) {\n    setValue(newValue);\n  }\n\n  return (\n    <div>\n      <h2 className={classes.title}>\n        <img className={classes.titleImg} src=\"/icon-48x48.png\" alt=\"logo\" />{\" \"}\n        نون\n      </h2>\n      <Paper className={classes.root}>\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          centered\n        >\n          <Tab className={classes.tab} label=\"صفحه اصلی\" />\n          <Tab className={classes.tab} label=\"ارتباط با ما\" />\n          {/* <Tab className={classes.tab} label=\"Item Three\" /> */}\n        </Tabs>\n      </Paper>\n    </div>\n  );\n};\n\nexport default BigHeader;\n","import React, { useState, useEffect } from \"react\";\nimport MiniHeader from \"./mini-header\";\nimport BigHeader from \"./big-header\";\n\nconst MainHeader: React.FC = () => {\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 500);\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", () => {\n      setIsMobile(window.innerWidth <= 500);\n    });\n  });\n\n  if (isMobile) {\n    return <MiniHeader />;\n  } else {\n    return <BigHeader />;\n  }\n};\n\nexport default MainHeader;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router\";\n\nimport Main from \"./pages/mainPage/Main\";\nimport NotFound from \"./pages/NotFound\";\nimport About from \"./pages/About\";\nimport MainHeader from \"./headers/main-header\";\n\nimport \"./App.css\";\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <MainHeader />\n      <section>\n        <Switch>\n          <Route exact path=\"/\" component={Main} />\n          <Route exact path=\"/about\" component={About} />\n          <Route component={NotFound} />\n        </Switch>\n      </section>\n      {/* <footer>\n        <p>footer</p>\n      </footer> */}\n    </div>\n  );\n};\n\nexport default App;\n\n// https://reacttraining.com/react-router/web/guides/basic-components\n\n// https://github.com/material-components/material-components-web-react\n// https://react-mdc.github.io/#/\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export enum AppPages {\n    MAIN_PAGE = \"mainPage\",\n    GAME_PAGE = \"gamePage\",\n    GAME_PAGE_N2 = \"gamePageN2\",\n    AUTH_PAGE = \"authPage\",\n}","\nexport interface ILevel {\n    levelId: number;\n    levelName: string;\n    levelWords: Array<string>;\n    worldsCount: number;\n    displayWordsCount: number;\n    locked: boolean;\n}\n\nexport const Levels:ILevel[] = [\n    {\n        levelId: 1,\n        levelName: \"مرحله تستی کوچک\",\n        levelWords: [\"brave\",\"clever\",\"cruel\"],\n        worldsCount:3,\n        displayWordsCount:2,\n        locked:false\n    },\n    {\n        levelId: 2,\n        levelName: \"مرحله تستی بزرگ\",\n        levelWords: [\"brave\",\"clever\",\"cruel\",\"funny\",\"selfish\",\"lazy\",\"person\",\"kind\",\"shy\"],\n        worldsCount:9,\n        displayWordsCount:20,\n        locked:false\n    }\n];\n","import { AppPages } from \"./pages\";\nimport { ILevel,Levels } from \"./levels\";\n\n/*\nexport class chapters {\n  levelId: number;\n  levelName: string;\n  levelPic: string;\n\n  constructor(levelId: number, levelName: string, levelPic: string) {\n    this.levelId = levelId;\n    this.levelName = levelName;\n    this.levelPic = levelPic;\n  }\n}\n*/\n\nexport interface IState {\n  pageName: AppPages;\n  levels: ILevel[];\n  levelId: number;\n  /*\n  score: number,\n  backgroundPic: string,\n\n  music: string,\n  // audio?: HTMLAudioElement,\n\n  headerTitle: string,\n  currentLevelId: number,// number\n  currentStage?: stage,// number\n\n  // gameData: any,\n  achievment: any,\n  saveChoise: any[],\n  // thisLevelChoises:any[]\n\n  pageName: string,\n  pageSetting: appPage,\n\n  isPaused: boolean,\n\n  chaptersInfo: chapters[],\n  */\n}\n\n// initialState\nconst init: IState = {\n  pageName: AppPages.GAME_PAGE_N2,// aAppPages.MAIN_PAGE,\n  levels: Levels,\n  levelId: 2\n/*\n  score: 0,\n  backgroundPic: gameData.startPage.backgroundPic,// ''\n\n  music: gameData.startPage.music,//'',\n  // restartMusic:true,\n  // audio: undefined, // use component instead of that\n\n  headerTitle:\"\",\n  currentLevelId: 0,\n  currentStage: undefined,\n\n  // gameData: gameData, // can delete and import and use only on reducer\n  achievment: {},\n  saveChoise: [],\n\n  pageName: \"startPage\",\n  pageSetting: gameData.startPage,\n  isPaused: false,\n  // muteMusic: false,\n\n  chaptersInfo: gameData.levels.map(level => new chapters(level.levelId, level.levelName, level.levelPic))\n  */\n};\n\nexport default init;\n\n// export const allLevels:Function = (state: IState) => state.levels;\nexport const findThisLevel:Function = (state: IState) => state.levels.find(x=>x.levelId === state.levelId);\n","import initialState, { IState } from \"./initialState\";\nimport { ActionTypes } from \"../actions/actionTypes\";\nimport { AppPages } from \"./pages\";\n\nexport default function MainReducer(state: IState = initialState, action: { type: any; payload: any }): any {\n\n  switch (action.type) {\n    case ActionTypes.CHANGE_PAGE:\n\n      const newPage: any = action.payload.newPage;\n      if (newPage === AppPages.GAME_PAGE) {\n        return {\n          ...state,\n          pageName: action.payload.newPage,\n          levelId: action.payload.levelId\n        };\n      }\n      return {\n        ...state,\n        pageName: newPage\n      };\n    /*\n        case ActionTypes.CHANGE_PAGE:\n          // console.log('change page reducer');//, action.payload);\n\n          if (!action.payload.levelId) {\n\n            let newPage = action.payload.newPage;\n            let pageSetting = (gameData as any)[newPage] as appPage;\n            let pageTitle = pageSetting.pageTitle;\n\n            return {\n              ...state,\n\n              backgroundPic: pageSetting.backgroundPic,\n              music: pageSetting.music,\n\n              headerTitle: pageTitle,\n              // currentLevelId:\n              //currentStage\n\n              saveChoise: [...state.saveChoise, {\n                action: ActionTypes.CHANGE_PAGE,\n                page: newPage\n              }],\n\n              pageName: newPage,\n              pageSetting,\n\n              isPaused: false,\n              //chaptersInfo:\n            }\n          }\n\n          let thisLevel = gameData.levels.find(level => level.levelId === action.payload.levelId) || gameData.levels[0];\n          let music = thisLevel.backgroundMusic;\n\n          return {\n            ...state,\n\n            backgroundPic: thisLevel.levelPic,\n            music,\n\n            headerTitle: thisLevel.levelName,\n            currentLevelId: thisLevel.levelId,\n            currentStage: thisLevel.stages.find(stage => stage.stageId === 1),\n\n            saveChoise: [...state.saveChoise, {\n              action: ActionTypes.CHANGE_PAGE,\n              page: action.payload.newPage,\n              levelId: action.payload.levelId\n            }],\n\n            pageName: action.payload.newPage,\n            // pageSetting,\n\n            isPaused: false,\n            //chaptersInfo:\n          }\n\n        case ActionTypes.CHANGE_STAGE:\n          //console.log('change stage reducer');\n\n          let stageId = action.payload.stageId;\n          if (!stageId) {\n            stageId = (state.currentStage ? state.currentStage.stageId : 0 )+ 1;\n          }\n\n          let score = state.score;\n          if (action.payload.score) {\n            score += action.payload.score;\n          }\n\n          //let currentStage = state.currentLevel? state.currentLevel.stages.find(stage => stage.stageId === stageId):null;\n          //let currentStage = state.currentLevelId? state.currentLevel.stages.find(stage => stage.stageId === stageId):null;\n          let currentlevel = gameData.levels.find(level => level.levelId === state.currentLevelId);\n          let currentStage = currentlevel && currentlevel.stages.find(stage => stage.stageId === stageId);\n\n          if (!currentStage) {\n            console.log('can not find stage'); // TODO: Score Page\n            return {\n              ...state,\n\n              pageName: 'chapterPage', // or end stage score page\n              saveChoise: [...state.saveChoise, {\n                action: ActionTypes.CHANGE_STAGE,\n                stage: 'cannot find stage. maybe end of stage'\n              }],\n            }\n          }\n\n          let backgroundPic = state.backgroundPic;\n          if (action.payload.backgroundPic && action.payload.backgroundPic !== '') {\n            backgroundPic = action.payload.backgroundPic;\n          }\n\n          if (currentStage.optionsSection && currentStage.backgroundPic && currentStage.backgroundPic !== '') {\n            console.log(\"change\");\n            backgroundPic = currentStage.backgroundPic;\n          }\n\n          return {\n            ...state,\n            currentStage,\n            score,\n            backgroundPic,\n            saveChoise: [...state.saveChoise, {\n              action: ActionTypes.CHANGE_STAGE,\n              stageId: stageId\n            }],\n          }\n\n        case ActionTypes.PAUSE_GAME:\n          console.log('pause game reducer');\n          return {\n            ...state,\n            isPaused: true,\n            //items: action.payload\n          }\n\n        case ActionTypes.RESUME_PAGE:\n          console.log('resume game reducer');\n          return {\n            ...state,\n            isPaused: false,\n            //items: action.payload\n          }*/\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport MainReducer from \"./mainReducer\";\n\nexport default combineReducers({\n  // mainReducer\n  Cart: MainReducer,\n  config: MainReducer\n});\n","import {\n    createStore,\n    // compose,\n    applyMiddleware,\n  } from \"redux\";\n\n  import thunk from \"redux-thunk\";\n  import rootReducer from \"../reducers/rootReducer\";\n  import { composeWithDevTools } from \"redux-devtools-extension\";\n\n  const initialState:object = {};\n\n  const middleware:Array<any> = [thunk];\n\n  const composeEnhancers:any = composeWithDevTools({\n    // specify name here, actionsBlacklist, actionsCreators and other options if needed\n  });\n\n  const enhancer:any = composeEnhancers(\n    applyMiddleware(...middleware),\n    // other store enhancers if any\n  );\n\n  const store: any = createStore(\n    rootReducer,\n    initialState,\n    enhancer\n  );\n  export default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\n\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./store/Store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n    , document.getElementById(\"root\"));\n\n// serviceWorker.unregister();\nserviceWorker.register();"],"sourceRoot":""}