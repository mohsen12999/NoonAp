{"version":3,"sources":["reducers/app.ts","components/pages/mainPage/page-cart.tsx","actions/actionTypes.ts","actions/shopActions.ts","components/pages/mainPage/main.tsx","components/pages/notFound.tsx","components/pages/about.tsx","actions/shop.ts","components/pages/product.tsx","components/headers/mini-header.tsx","components/headers/big-header.tsx","components/headers/main-header.tsx","components/pages/soon.tsx","components/pages/address.tsx","components/pages/checkout.tsx","components/pages/marketsPage/market-cart.tsx","components/pages/marketsPage/market.tsx","components/App.tsx","serviceWorker.ts","reducers/appReducer.ts","reducers/shop.ts","reducers/shopReducer.ts","reducers/rootReducer.ts","store/configureStore.tsx","index.tsx"],"names":["AppPages","useStyles","makeStyles","theme","card","display","details","flexDirection","content","flex","cover","width","backgroundSize","controls","alignItems","paddingLeft","spacing","paddingBottom","playIcon","height","persianfont","fontFamily","PageCart","title","subtitle","img","classes","Card","className","CardMedia","image","process","CardContent","Typography","component","variant","color","ActionTypes","INITIAL_APPSTATE","tabId","pageId","pageName","MAIN","pageTitle","offline","loadData","dispatch","type","TRY_LOADING_INIT","fetch","method","then","res","json","error","result","console","log","FAILED_LOAD_INIT","payload","info","SUCCESS_LOAD_INIT","catch","root","flexGrow","grid","paddingTop","littleGrid","cursor","paper","padding","textAlign","palette","text","secondary","link","textDecoration","progress","margin","progressDiv","marginTop","yekanFont","mapDispatchToProps","changePage","url","push","connect","State","app","loadingDbInfo","shop","dbInfo","prop","React","useEffect","undefined","Container","maxWidth","CircularProgress","Button","onClick","Grid","container","justify","groups","map","group","key","id","item","xs","sm","enabled","MARKET","SOON","persianTitle","persianSubtitle","createStyles","myFont","NotFound","Paper","mainTitle","companyLink","href","Markets","enable","discount","freeDeliver","marketGroupId","products","price","max","MarketId","count","openTime","day","firstTime","start","end","address","description","PRODUCT_LIST","overflowX","table","tableCell","imgCell","cellImg","button","float","addToCart","event","productId","marketId","stopPropagation","ADD_TO_CART","removeFromCart","REMOVE_FROM_CART","cart","match","params","market","find","m","Number","pCart","totalPrice","reduce","sum","p","Table","TableHead","TableRow","TableCell","align","TableBody","product","src","alt","scope","Fab","size","aria-label","colSpan","ADDRESS","extendedIcon","menuButton","marginLeft","list","fullList","menuTitle","side","useState","top","left","bottom","right","state","setState","toggleDrawer","open","AppBar","position","Toolbar","IconButton","edge","Drawer","anchor","onClose","role","onKeyDown","List","ListItem","ListItemIcon","ListItemText","primary","Divider","ABOUT","tab","titleImg","verticalAlign","value","setValue","Tabs","onChange","newValue","indicatorColor","textColor","centered","Tab","label","MainHeader","window","innerWidth","isMobile","setIsMobile","addEventListener","btn","flexWrap","textField","dense","menu","marginRight","textField2","selectFormControl","pickerGrid","picker","direction","ChangeDeliverKind","deliverKind","CHANGE_DELIVERKIND","ChangeDeliverDistrict","deliverDistrict","CHANGE_DELIVERDISTRICT","ChangeMobile","mobile","CHANGE_MOBILE","ChangeFullname","fullname","CHANGE_FULLNAME","ChangeAddress","CHANGE_ADDRESS","ChangeDate","date","CHANGE_DATE","LoadUserInfo","TRY_LOADING_USER_INFO","FAILED_LOAD_USER_INFO","customer","SUCCESS_LOAD_USER_INFO","name","district","LoadLocation","TRY_LOADING_LOCATION","navigator","geolocation","getCurrentPosition","crd","coords","latitude","longitude","headers","status","SUCCESS_LOAD_LOCATION","location","FAILED_LOAD_LOCATION","deliver","jMoment","loadPersian","dialect","usePersianDigits","FormControl","InputLabel","htmlFor","Select","target","inputProps","MenuItem","FormHelperText","Fragment","clsx","Input","fullWidth","endAdornment","InputAdornment","onMouseDown","preventDefault","loadingInfo","TextField","utils","JalaliUtils","locale","DateTimePicker","minDate","Date","okLabel","cancelLabel","labelFunc","format","multiline","loadingLocation","length","CHECKOUT","filter","chip","MarketCart","Chip","icon","clickable","markets","openTimes","groupId","dbMarkets","groups_id","dayofweek","getDay","hour","getHours","getMinutes","dbMarketsExtended","t","markets_id","dayNumber","startTime","endTime","isOpen","PRODUCT","exact","path","Main","About","props","Soon","Checkout","Address","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","AppReducer","action","CHANGE_PAGE","newPage","CHANGE_TAB_ID","INITIAL_SHOPSTATE","moment","time","lastMarketId","addId","removeId","quantity","newState","loadinglocation","ShopReducer","createRootReducer","history","combineReducers","router","connectRouter","createBrowserHistory","initialState","store","createStore","composeWithDevTools","applyMiddleware","routerMiddleware","thunk","ReactDOM","render","document","getElementById","URL","origin","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.0c447faa.chunk.js","sourcesContent":["export enum AppPages {\r\n  MAIN = \"main\",\r\n  ABOUT = \"about\",\r\n  MARKET = \"market\",\r\n  PRODUCT = \"product\",\r\n  ADDRESS = \"address\",\r\n  BILL = \"bill\",\r\n  CHECKOUT = \"checkout\",\r\n  SOON = \"soon\"\r\n}\r\n\r\nexport interface IAppState {\r\n  tabId?: number;\r\n  pageId: number;\r\n  pageName: AppPages;\r\n  pageTitle: string;\r\n  args?: string[];\r\n  offline: boolean;\r\n}\r\n\r\nexport const INITIAL_APPSTATE: IAppState = {\r\n  tabId: 10,\r\n  pageId: 0,\r\n  pageName: AppPages.MAIN,\r\n  pageTitle: \"صفحه اصلی\",\r\n  offline: false\r\n};\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    display: \"flex\"\r\n  },\r\n  details: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\"\r\n  },\r\n  content: {\r\n    flex: \"1 0 auto\"\r\n  },\r\n  cover: {\r\n    width: \"30%\",\r\n    backgroundSize: \"contain\"\r\n  },\r\n  controls: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingLeft: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1)\r\n  },\r\n  playIcon: {\r\n    height: 38,\r\n    width: 38\r\n  },\r\n  persianfont: {\r\n    fontFamily: \"Yekan\"\r\n  }\r\n}));\r\n\r\ninterface IPageCartProp {\r\n  title: string;\r\n  subtitle: string;\r\n  img: string;\r\n}\r\n\r\nconst PageCart: React.FC<IPageCartProp> = ({ title, subtitle, img }) => {\r\n  // const PageCart: React.FC = (title: string, subtitle: string, img: string) => {\r\n  const classes = useStyles();\r\n  // const theme = useTheme();\r\n  //console.log(title, subtitle, img);\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardMedia\r\n        className={classes.cover}\r\n        image={process.env.PUBLIC_URL + img} //\"/images/group/shopping-cart.png\"\r\n        title=\"Live from space album cover\"\r\n      />\r\n\r\n      <div className={classes.details}>\r\n        <CardContent className={classes.content}>\r\n          <Typography\r\n            className={classes.persianfont}\r\n            component=\"h5\"\r\n            variant=\"h5\"\r\n          >\r\n            {title}\r\n          </Typography>\r\n          <Typography\r\n            className={classes.persianfont}\r\n            variant=\"subtitle1\"\r\n            color=\"textSecondary\"\r\n          >\r\n            {subtitle}\r\n          </Typography>\r\n        </CardContent>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PageCart;\r\n\r\n/*\r\nimport React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    maxWidth: \"100%\"\r\n  },\r\n  media: {\r\n    height: 140\r\n  }\r\n});\r\n\r\nexport default function MediaCard() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          className={classes.media}\r\n          // image=\"/images/group/shopping-cart.png\"\r\n          image={process.env.PUBLIC_URL + \"/images/group/shopping-cart.png\"}\r\n          title=\"Contemplative Reptile\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            Lizard\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            Lizards are a widespread group of squamate reptiles, with over 6,000\r\n            species, ranging across all continents except Antarctica\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n}\r\n*/\r\n","export enum ActionTypes {\r\n  CHANGE_PAGE = \"CHANGE_PAGE\",\r\n  CHANGE_TAB_ID = \"CHANGE_TAB_ID\",\r\n\r\n  ADD_TO_CART = \"ADD_TO_CART\",\r\n  REMOVE_FROM_CART = \"REMOVE_FROM_CART\",\r\n\r\n  CHANGE_DELIVERKIND = \"CHANGE_DELIVERKIND\",\r\n  CHANGE_DELIVERDISTRICT = \"CHANGE_DELIVERDISTRICT\",\r\n\r\n  CHANGE_MOBILE = \"CHANGE_MOBILE\",\r\n  CHANGE_FULLNAME = \"CHANGE_FULLNAME\",\r\n  CHANGE_ADDRESS = \"CHANGE_ADDRESS\",\r\n\r\n  CHANGE_DATE = \"CHANGE_DATE\",\r\n  // CHANGE_TIME = \"CHANGE_TIME\",\r\n\r\n  // CHANGE_LOCATION = \"CHANGE_LOCATION\",\r\n\r\n  TRY_LOADING_INIT = \"TRY_LOADING_INIT\",\r\n  SUCCESS_LOAD_INIT = \"SUCCESS_LOAD_INIT\",\r\n  FAILED_LOAD_INIT = \"FAILED_LOAD_INIT\",\r\n\r\n  TRY_LOADING_USER_INFO = \"TRY_LOADING_USER_INFO\",\r\n  SUCCESS_LOAD_USER_INFO = \"SUCCESS_LOAD_USER_INFO\",\r\n  FAILED_LOAD_USER_INFO = \"FAILED_LOAD_USER_INFO\",\r\n\r\n  TRY_LOADING_LOCATION = \"TRY_LOADING_LOCATION\",\r\n  SUCCESS_LOAD_LOCATION = \"SUCCESS_LOAD_LOCATION\",\r\n  FAILED_LOAD_LOCATION = \"FAILED_LOAD_LOCATION\"\r\n}\r\n","import { ActionTypes } from \"./actionTypes\";\r\nimport { Dispatch } from \"redux\";\r\nimport { Moment } from \"moment-jalaali\";\r\nimport { IDbCustomer, IDbInfo } from \"./shop\";\r\n\r\nexport const addToCart: Function = (\r\n  event: React.MouseEvent<HTMLButtonElement>,\r\n  productId: number,\r\n  marketId: number\r\n) => (dispatch: Dispatch) => {\r\n  event.stopPropagation();\r\n  dispatch({\r\n    type: ActionTypes.ADD_TO_CART,\r\n    payload: { productId, marketId }\r\n  });\r\n};\r\n\r\nexport const removeFromCart: Function = (\r\n  event: React.MouseEvent<HTMLButtonElement>,\r\n  productId: number,\r\n  marketId: number\r\n) => (dispatch: Dispatch) => {\r\n  event.stopPropagation();\r\n  dispatch({\r\n    type: ActionTypes.REMOVE_FROM_CART,\r\n    payload: { productId, marketId }\r\n  });\r\n};\r\n\r\nexport const ChangeDeliverKind: Function = (\r\n  event: React.ChangeEvent<{ name?: string; value: unknown }>,\r\n  deliverKind: string\r\n) => (dispatch: Dispatch) => {\r\n  event.stopPropagation();\r\n  dispatch({\r\n    type: ActionTypes.CHANGE_DELIVERKIND,\r\n    payload: { deliverKind }\r\n  });\r\n};\r\n\r\nexport const ChangeDeliverDistrict: Function = (\r\n  event: React.ChangeEvent<{ name?: string; value: unknown }>,\r\n  deliverDistrict: string\r\n) => (dispatch: Dispatch) => {\r\n  event.stopPropagation();\r\n  dispatch({\r\n    type: ActionTypes.CHANGE_DELIVERDISTRICT,\r\n    payload: { deliverDistrict }\r\n  });\r\n};\r\n\r\nexport const ChangeMobile: Function = (\r\n  event: React.ChangeEvent<HTMLInputElement>,\r\n  mobile: string\r\n) => (dispatch: Dispatch) => {\r\n  event.stopPropagation();\r\n  dispatch({\r\n    type: ActionTypes.CHANGE_MOBILE,\r\n    payload: { mobile }\r\n  });\r\n};\r\n\r\nexport const ChangeFullname: Function = (\r\n  event: React.ChangeEvent<HTMLButtonElement>,\r\n  fullname: string\r\n) => (dispatch: Dispatch) => {\r\n  event.stopPropagation();\r\n  dispatch({\r\n    type: ActionTypes.CHANGE_FULLNAME,\r\n    payload: { fullname }\r\n  });\r\n};\r\n\r\nexport const ChangeAddress: Function = (\r\n  event: React.ChangeEvent<HTMLButtonElement>,\r\n  address: string\r\n) => (dispatch: Dispatch) => {\r\n  event.stopPropagation();\r\n  dispatch({\r\n    type: ActionTypes.CHANGE_ADDRESS,\r\n    payload: { address }\r\n  });\r\n};\r\n\r\nexport const ChangeDate: Function = (\r\n  // event: React.MouseEvent<HTMLButtonElement>,\r\n  date: Moment\r\n) => (dispatch: Dispatch) => {\r\n  // event.stopPropagation();\r\n  dispatch({\r\n    type: ActionTypes.CHANGE_DATE,\r\n    payload: { date }\r\n  });\r\n};\r\n\r\nexport const loadData: Function = () => (dispatch: Dispatch) => {\r\n  const url: string = \"https://apdr.ir/api/markets\";\r\n  // const url: string = \"http://localhost/laravel_api/public/api/markets\";\r\n\r\n  dispatch({\r\n    type: ActionTypes.TRY_LOADING_INIT\r\n  });\r\n\r\n  fetch(url, { method: \"GET\" })\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      if (res.error || res.result === false) {\r\n        console.log(res.error);\r\n        dispatch({\r\n          type: ActionTypes.FAILED_LOAD_INIT,\r\n          payload: { error: res.error }\r\n        });\r\n      }\r\n      const info: IDbInfo = res;\r\n      console.log(info);\r\n      dispatch({\r\n        type: ActionTypes.SUCCESS_LOAD_INIT,\r\n        payload: {\r\n          info: info\r\n        }\r\n      });\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n      dispatch({\r\n        type: ActionTypes.FAILED_LOAD_INIT,\r\n        payload: { error }\r\n      });\r\n    });\r\n};\r\n\r\nexport const LoadUserInfo: any = (mobile: string) => (dispatch: Dispatch) => {\r\n  const url: string = \"https://apdr.ir/api/customers/\" + mobile;\r\n\r\n  dispatch({\r\n    type: ActionTypes.TRY_LOADING_USER_INFO\r\n  });\r\n\r\n  fetch(url, { method: \"GET\" })\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      if (res.error || res.result === false) {\r\n        dispatch({\r\n          type: ActionTypes.FAILED_LOAD_USER_INFO,\r\n          payload: { error: res.error }\r\n        });\r\n      }\r\n      const customer: IDbCustomer = res.customer;\r\n      dispatch({\r\n        type: ActionTypes.SUCCESS_LOAD_USER_INFO,\r\n        payload: {\r\n          fullname: customer.name,\r\n          district: customer.district,\r\n          address: customer.address\r\n        }\r\n      });\r\n    })\r\n    .catch(error => {\r\n      dispatch({\r\n        type: ActionTypes.FAILED_LOAD_USER_INFO,\r\n        payload: { error }\r\n      });\r\n    });\r\n};\r\n\r\nexport const LoadLocation: any = () => (dispatch: Dispatch) => {\r\n  dispatch({\r\n    type: ActionTypes.TRY_LOADING_LOCATION\r\n  });\r\n  if (navigator.geolocation) {\r\n    navigator.geolocation.getCurrentPosition(position => {\r\n      if (position && position !== undefined) {\r\n        const crd: Coordinates = position.coords;\r\n        const url: string =\r\n          \"https://api.neshan.org/v2/reverse?lat=\" +\r\n          crd.latitude +\r\n          \"&lng=\" +\r\n          crd.longitude;\r\n\r\n        fetch(url, {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Api-Key\": \"service.idR8Yra0Ji4A4DHlaIj54K0VUl7kX7DglvojWyjG\"\r\n          }\r\n        })\r\n          .then(res => res.json())\r\n          .then(res => {\r\n            // console.log(res);\r\n            const status: string = res[\"status\"];\r\n            const address: string = res[\"formatted_address\"];\r\n            if (\r\n              status !== undefined &&\r\n              status === \"OK\" &&\r\n              address !== undefined\r\n            ) {\r\n              dispatch({\r\n                type: ActionTypes.SUCCESS_LOAD_LOCATION,\r\n                payload: {\r\n                  address: address,\r\n                  location: position\r\n                }\r\n              });\r\n            } else {\r\n              dispatch({\r\n                type: ActionTypes.FAILED_LOAD_LOCATION,\r\n                payload: { error: status }\r\n              });\r\n            }\r\n          })\r\n          .catch(error => {\r\n            dispatch({\r\n              type: ActionTypes.FAILED_LOAD_LOCATION,\r\n              payload: { error }\r\n            });\r\n          });\r\n      } else {\r\n        dispatch({\r\n          type: ActionTypes.FAILED_LOAD_LOCATION,\r\n          payload: { error: \"position \" + position }\r\n        });\r\n      }\r\n    });\r\n  } else {\r\n    dispatch({\r\n      type: ActionTypes.FAILED_LOAD_LOCATION,\r\n      payload: { error: \"navigator.geolocation \" + navigator.geolocation }\r\n    });\r\n  }\r\n\r\n  // if (navigator.geolocation) {\r\n  //   navigator.geolocation.getCurrentPosition((position)=> {\r\n  //     if(position && position !== undefined) {\r\n  //       const crd:Coordinates = position.coords;\r\n  //       const url: string = \"https://api.neshan.org/v2/reverse?lat=\" + crd.latitude + \"&lng=\" + crd.longitude;\r\n  //       fetch(url, {\r\n  //         method: \"GET\",\r\n  //         headers: { \"Api-Key\": \"service.idR8Yra0Ji4A4DHlaIj54K0VUl7kX7DglvojWyjG\" }\r\n  //     }).then(res => res.json()).then((res:any)=>{\r\n  //       const status: string = res[\"status\"];\r\n  //       const address: string = res[\"formatted_address\"];\r\n  //       if(status !== undefined && status === \"OK\" && address !== undefined) {\r\n  //         // store.dispatch(ChangeLocation(position,address));\r\n  //         dispatch({\r\n  //           type: ActionTypes.SUCCESS_LOAD_LOCATION,\r\n  //           payload: {\r\n  //             address:address,\r\n  //             latitude:crd.latitude,\r\n  //             longitude:crd.longitude\r\n  //           }\r\n  //         });\r\n  //         return;\r\n  //       }\r\n  //     }).catch(error=>{\r\n  //       dispatch({\r\n  //         type: ActionTypes.FAILED_LOAD_LOCATION,\r\n  //         payload: { error }\r\n  //       });\r\n  //     }\r\n  //       );\r\n  //     }\r\n  //   }\r\n\r\n  //   dispatch({\r\n  //     type: ActionTypes.FAILED_LOAD_LOCATION\r\n  //   });\r\n};\r\n\r\n// export const ChangeTime: any = (\r\n//   event: React.MouseEvent<HTMLButtonElement>,\r\n//   time: string\r\n// ) => (dispatch: Dispatch) => {\r\n//   event.stopPropagation();\r\n//   dispatch({\r\n//     type: ActionTypes.CHANGE_TIME,\r\n//     payload: { time }\r\n//   });\r\n// };\r\n\r\n// export const ChangeLocation: any = (\r\n//   event: React.MouseEvent<HTMLButtonElement>,\r\n//   location: Position\r\n// ) => (dispatch: Dispatch) => {\r\n//   event.stopPropagation();\r\n//   dispatch({\r\n//     type: ActionTypes.CHANGE_LOCATION,\r\n//     payload: { location }\r\n//   });\r\n// };\r\n\r\n//////////////////////////////////////////////////////\r\n\r\n// export const scorePage = () => dispatch => {\r\n//     //...\r\n//     dispatch({\r\n//         type: SCORE_PAGE,\r\n//         payload: []\r\n//     })\r\n// }\r\n/*\r\nexport const changePage: Function = (\r\n  event: React.MouseEvent<HTMLButtonElement>,\r\n  newPage: AppPages,\r\n  levelId: number\r\n) => (dispatch: Dispatch) => {\r\n  event.stopPropagation();\r\n  dispatch({\r\n    type: ActionTypes.CHANGE_PAGE,\r\n    payload: { levelId, newPage }\r\n  });\r\n};\r\n\r\n\r\nexport const changeStage =\r\n    (event: React.MouseEvent<HTMLButtonElement>,stageId:string, score:number, backgroundPic:string) => (dispatch:Dispatch) => {\r\n\r\n    event.stopPropagation();\r\n    // console.log('changeStage actions', event, stageId, score,backgroundPic);\r\n    dispatch({\r\n        type: ActionTypes.CHANGE_STAGE,\r\n        payload: { stageId, score,backgroundPic }\r\n    })\r\n}\r\n/*\r\n/*\r\nexport const pauseGame = (event:React.MouseEvent<HTMLButtonElement>, show:boolean = true) => (dispatch:Dispatch) => {\r\n\r\n    event.stopPropagation();\r\n    dispatch({\r\n        type: show ? ActionTypes.PAUSE_GAME : ActionTypes.RESUME_PAGE,\r\n        payload: { isPaused: show }\r\n    })\r\n}\r\n*/\r\n/*\r\nexport const ChangeMobile: ActionCreator<IChangeMobileDeliver> = (productId) => {\r\n  return {\r\n    type: CHANGE_MOBILE,\r\n    productId\r\n  };\r\n};\r\n\r\nexport const LoadUserInfo: ActionCreator<ILoadUserInfo> = (name, mobile, address, latitude, longitude) => {\r\n  console.log(\"actions\", name, mobile, address, latitude, longitude);\r\n  return {\r\n    type: LOAD_USER_INFO,\r\n    name, mobile, address, latitude, longitude\r\n  };\r\n};\r\n*/\r\n","import React from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport PageCart from \"./page-cart\";\r\n\r\nimport { IAppState, AppPages } from \"../../../reducers/app\";\r\nimport { IShopState } from \"../../../reducers/shop\";\r\nimport { connect } from \"react-redux\";\r\nimport { push } from \"connected-react-router\";\r\n\r\nimport { IDbInfo } from \"../../../actions/shop\";\r\nimport { loadData } from \"../../../actions/shopActions\";\r\n\r\nconst useStyles: any = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  grid: {\r\n    paddingTop: theme.spacing(2)\r\n  },\r\n  littleGrid: { cursor: \"pointer\" },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary\r\n  },\r\n  link: {\r\n    textDecoration: \"none\"\r\n  },\r\n  progress: {\r\n    margin: theme.spacing(2)\r\n  },\r\n  progressDiv: {\r\n    textAlign: \"center\",\r\n    marginTop: \"3rem\"\r\n  },\r\n  yekanFont: {\r\n    fontFamily: \"Yekan\"\r\n  }\r\n}));\r\n\r\ninterface IMainProps {\r\n  // tabId?: number;\r\n  // changeTabId: Function;\r\n\r\n  loadingDbInfo: boolean;\r\n  dbInfo?: IDbInfo;\r\n\r\n  loadData: Function;\r\n  changePage: Function;\r\n}\r\n\r\nconst Main: React.FC<IMainProps> = (prop: IMainProps) => {\r\n  const classes: any = useStyles();\r\n\r\n  React.useEffect(() => {\r\n    // prop.changeTabId(0);\r\n    if (prop.dbInfo === undefined) {\r\n      prop.loadData();\r\n    }\r\n  },[prop]);\r\n\r\n  // console.log(prop.tabId);\r\n\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      {prop.loadingDbInfo ? (\r\n        <div className={classes.progressDiv}>\r\n          <CircularProgress className={classes.progress} />\r\n        </div>\r\n      ) : prop.dbInfo === undefined ? (\r\n        <div className={classes.progressDiv}>\r\n          <h4 className={classes.yekanFont}>خطا در بارگذاری اطلاعات</h4>\r\n          <Button\r\n            className={classes.yekanFont}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => prop.loadData()}\r\n          >\r\n            بارگزاری مجدد\r\n          </Button>\r\n        </div>\r\n      ) : (\r\n        <Grid\r\n          className={classes.grid}\r\n          container\r\n          spacing={3}\r\n          justify=\"space-around\"\r\n          alignItems=\"stretch\"\r\n        >\r\n          {prop.dbInfo.groups.map(group => (\r\n            <Grid\r\n              className={classes.littleGrid}\r\n              key={group.id}\r\n              item\r\n              xs={12}\r\n              sm={6}\r\n              onClick={() =>\r\n                prop.changePage(\r\n                  group.enabled\r\n                    ? \"/\" + AppPages.MARKET + \"/\" + group.id + \"/\" + group.title\r\n                    : \"/\" + AppPages.SOON\r\n                )\r\n              }\r\n            >\r\n              <PageCart\r\n                title={group.persianTitle}\r\n                subtitle={\r\n                  group.persianSubtitle !== undefined\r\n                    ? group.persianSubtitle\r\n                    : \"\"\r\n                }\r\n                img={group.img}\r\n              />\r\n              {/* </a> */}\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (State: { app: IAppState; shop: IShopState }) => ({\r\n  // cart: State.shop.cart\r\n  tabId: State.app.tabId,\r\n  loadingDbInfo: State.shop.loadingDbInfo,\r\n  dbInfo: State.shop.dbInfo\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  // changePage: changePage\r\n  // changeTabId: changeTabId\r\n  loadData,\r\n  changePage: (url: string) => push(url)\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Main);\r\n","import React from \"react\";\r\nimport { Theme, createStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      padding: theme.spacing(3, 2),\r\n      margin: theme.spacing(3, 2)\r\n    },\r\n    myFont: {\r\n      fontFamily: \"Yekan\"\r\n    }\r\n  })\r\n);\r\n\r\nconst NotFound: React.FC = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <Paper className={classes.root}>\r\n        <Typography className={classes.myFont} variant=\"h5\" component=\"h3\">\r\n          صفحه مورد نظر پیدا نشد.\r\n        </Typography>\r\n        <Typography className={classes.myFont} component=\"p\">\r\n          لطفاً دوباره تلاش کنید.\r\n        </Typography>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { IAppState } from \"../../reducers/app\";\r\nimport { IShopState } from \"../../reducers/shop\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst useStyles: any = makeStyles({\r\n  mainTitle: {\r\n    fontFamily: \"Yekan\"\r\n  },\r\n  companyLink: {\r\n    fontFamily: \"Yekan\",\r\n    padding: \"2px\"\r\n  }\r\n});\r\n\r\ninterface IAboutProps {\r\n  // tabId?: number;\r\n  // changeTabId: Function;\r\n}\r\n\r\nconst About: React.FC<IAboutProps> = (prop: IAboutProps) => {\r\n  const classes: any = useStyles();\r\n\r\n  // useEffect(() => {\r\n  //   prop.changeTabId(1);\r\n  // });\r\n\r\n  // console.log(prop.tabId);\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <h3 className={classes.mainTitle}>درباره ما</h3>\r\n      <p className={classes.mainTitle}>\r\n        کلیه حقوق مادی و معنوی اپلیکیشن نون متعلق به شرکت\r\n        <a\r\n          className={classes.companyLink}\r\n          href=\"http://www.apdr.ir\"\r\n          title=\"وب سایت شرکت کاوشگران البرز\"\r\n        >\r\n          کاوشگران البرز\r\n        </a>\r\n        می‌باشد.\r\n      </p>\r\n      <h3 className={classes.mainTitle}>آدرس</h3>\r\n      <p className={classes.mainTitle}>\r\n        رامسر - خیابان مطهری - جنب بانک صادرات مرکزی - طبقه دوم - شرکت کاوشگران\r\n        البرز\r\n      </p>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (State: { app: IAppState; shop: IShopState }) => ({\r\n  // cart: State.shop.cart\r\n  // tabId: State.app.tabId\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  // changePage: changePage\r\n  // changeTabId: changeTabId\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(About);\r\n","export interface IMarketGroup {\r\n  id: number;\r\n  title: string;\r\n  persianTitle: string;\r\n  persianSubtitle?: string;\r\n  img: string;\r\n  enable: boolean;\r\n  // \"products\": IProduct[];\r\n}\r\n\r\nexport interface IMarket {\r\n  id: number;\r\n  title: string;\r\n  persianTitle: string;\r\n  persianSubtitle?: string;\r\n  img: string;\r\n\r\n  discount?: number;\r\n  freeDeliver?: boolean;\r\n  enable: boolean;\r\n\r\n  marketGroupId: number;\r\n\r\n  products: IProduct[];\r\n  openTime: IOpenTimesState;\r\n\r\n  address?: string;\r\n  description?: string;\r\n}\r\n\r\nexport interface IProduct {\r\n  id: number;\r\n  title: string;\r\n  subtitle?: string;\r\n  price: number;\r\n  discount?: number;\r\n  img: string;\r\n  enable: boolean;\r\n  max?: number;\r\n  count: number;\r\n\r\n  MarketId?: number;\r\n}\r\n\r\nexport interface IWorkTime {\r\n  title?: string;\r\n  start: number;\r\n  end: number;\r\n}\r\n\r\nexport interface IOpenTime {\r\n  day?: string;\r\n  firstTime: IWorkTime;\r\n  secoundTime?: IWorkTime;\r\n}\r\n\r\ninterface IOpenTimesState {\r\n  [date: string]: IOpenTime;\r\n}\r\n\r\nexport interface IDeliverTime {\r\n  id: number;\r\n  title: string;\r\n  start: number;\r\n  end: number;\r\n}\r\n\r\n// -------------------------------------------------------------------------------------\r\n\r\n// database\r\n\r\nexport interface IDbCustomer {\r\n  id: number;\r\n  mobile: string;\r\n  name: string;\r\n  district: string;\r\n  address: string;\r\n  latitude: number;\r\n  longitude: number;\r\n\r\n  created_at: any;\r\n  updated_at: any;\r\n}\r\n\r\nexport interface IDbGroup {\r\n  id: number;\r\n  title: string;\r\n  persianTitle: string;\r\n  persianSubtitle?: string;\r\n  img: string;\r\n  enabled: boolean;\r\n\r\n  MarketId: number;\r\n\r\n  created_at: any;\r\n  updated_at: any;\r\n}\r\n\r\nexport interface IDbMarket {\r\n  id: number;\r\n  title: string;\r\n  persianTitle: string;\r\n  persianSubtitle?: string;\r\n  img: string;\r\n  discount?: number;\r\n\r\n  address?: string;\r\n  description?: string;\r\n\r\n  freeDeliver: boolean;\r\n  enabled: boolean;\r\n\r\n  groups_id: number;\r\n\r\n  created_at: any;\r\n  updated_at: any;\r\n}\r\n\r\nexport interface IDbOpenTime {\r\n  id: number;\r\n  dayName?: string;\r\n\r\n  dayNumber: number;\r\n  startTime: number;\r\n  endTime: number;\r\n\r\n  markets_id: number;\r\n\r\n  created_at: any;\r\n  updated_at: any;\r\n}\r\n\r\nexport interface IDbProduct {\r\n  id: number;\r\n  title: string;\r\n  persianTitle: string;\r\n  persianSubTitle?: string;\r\n  price: number;\r\n  discount?: number;\r\n  img: string;\r\n  enable: boolean;\r\n  max?: number;\r\n\r\n  markets_Id: number;\r\n\r\n  created_at: any;\r\n  updated_at: any;\r\n  // count?: number;\r\n}\r\n\r\nexport interface IDbInfo {\r\n  groups: IDbGroup[];\r\n  markets: IDbMarket[];\r\n  openTimes: IDbOpenTime[];\r\n  products: IDbProduct[];\r\n}\r\n\r\n// mock values -> read from server at last\r\n// market groups\r\n// export const MarketsGroups: IMarketGroup[] = [\r\n//   {\r\n//     id: 1,\r\n//     title: \"Breads\",\r\n//     persianTitle: \"نان تازه\",\r\n//     persianSubtitle: \"خرید نان تازه و گرم\",\r\n//     img: \"/images/group/bread.png\",\r\n//     enable: true\r\n//   },\r\n//   {\r\n//     id: 2,\r\n//     title: \"Market\",\r\n//     persianTitle: \"سوپر مارکت\",\r\n//     persianSubtitle: \"انتخاب و خرید مواد غذایی\",\r\n//     img: \"/images/group/shopping-cart.png\",\r\n//     enable: false\r\n//   },\r\n//   {\r\n//     id: 3,\r\n//     title: \"FastFoods\",\r\n//     persianTitle: \"فست فود\",\r\n//     persianSubtitle: \"سفارش غذا از فست فود و کافه\",\r\n//     img: \"/images/group/fast-food.png\",\r\n//     enable: false\r\n//   },\r\n//   {\r\n//     id: 4,\r\n//     title: \"Restaurants\",\r\n//     persianTitle: \"رستوران\",\r\n//     persianSubtitle: \"سفارش غذاهای ایرانی و محلی\",\r\n//     img: \"/images/group/resturant.png\",\r\n//     enable: false\r\n//   },\r\n//   {\r\n//     id: 5,\r\n//     title: \"Souvenir\",\r\n//     persianTitle: \"سوغات\",\r\n//     persianSubtitle: \"صنایع دستی محلی و بومی\",\r\n//     img: \"/images/group/souvenir.png\",\r\n//     enable: false\r\n//   },\r\n//   {\r\n//     id: 6,\r\n//     title: \"Discount\",\r\n//     persianTitle: \"تخفیفان رامسر\",\r\n//     persianSubtitle: \"تخفیف های باورنکردنی از همه چیز\",\r\n//     img: \"/images/group/discount.png\",\r\n//     enable: false\r\n//   }\r\n// ];\r\n\r\nexport const Markets: IMarket[] = [\r\n  {\r\n    id: 1,\r\n    title: \"Ebrahimi\",\r\n    persianTitle: \"نانوایی ابراهیمی\",\r\n    persianSubtitle: \"ابریشم محله\",\r\n    img: \"/images/market/bakery-logo.png\",\r\n    enable: true,\r\n    discount: 10,\r\n    freeDeliver: true,\r\n    marketGroupId: 1,\r\n    products: [\r\n      {\r\n        id: 1,\r\n        title: \"بربری آزاد ساده\",\r\n        price: 1500,\r\n        max: 30,\r\n        img: \"/images/product/barbari-192.png\",\r\n        enable: true,\r\n        MarketId: 1,\r\n        count: 0\r\n      },\r\n      {\r\n        id: 2,\r\n        title: \"بربری آزاد کنجدی\",\r\n        price: 2000,\r\n        max: 30,\r\n        img: \"/images/product/barbari-konjedi-192.png\",\r\n        enable: false,\r\n        MarketId: 1,\r\n        count: 0\r\n      }\r\n    ],\r\n    openTime: {\r\n      \"6\": {\r\n        day: \"شنبه\",\r\n        firstTime: {\r\n          title: \"6 تا 11\",\r\n          start: 6,\r\n          end: 11\r\n        }\r\n      }\r\n    },\r\n\r\n    address: \"رامسر - ابریشم محله\",\r\n    description: \"\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"hayat\",\r\n    persianTitle: \"نگارخانه حیاط حیات\",\r\n    img: \"/images/market/florist-bakery-cafe.png\",\r\n    enable: true,\r\n    discount: 0,\r\n    marketGroupId: 1,\r\n    products: [\r\n      {\r\n        id: 1,\r\n        title: \"دیتاکس کیوی\",\r\n        price: 15000,\r\n        max: 5,\r\n        img: \"/images/product/water-kiwi.png\",\r\n        enable: true,\r\n        MarketId: 1,\r\n        count: 0\r\n      },\r\n      {\r\n        id: 2,\r\n        title: \"دیتاکس خیار\",\r\n        price: 20000,\r\n        max: 5,\r\n        img: \"/images/product/StrawberryCucumber.png\",\r\n        enable: false,\r\n        MarketId: 1,\r\n        count: 0\r\n      },\r\n      {\r\n        id: 3,\r\n        title: \"دیتاکس لیمو\",\r\n        price: 20000,\r\n        max: 5,\r\n        img: \"/images/product/lemon.png\",\r\n        enable: false,\r\n        MarketId: 1,\r\n        count: 0\r\n      },\r\n      {\r\n        id: 4,\r\n        title: \"دیتاکس مخصوص\",\r\n        price: 20000,\r\n        max: 5,\r\n        img: \"/images/product/detox-water-.png\",\r\n        enable: false,\r\n        MarketId: 1,\r\n        count: 0\r\n      }\r\n    ],\r\n    openTime: {\r\n      \"6\": {\r\n        day: \"شنبه\",\r\n        firstTime: {\r\n          title: \"6 تا 11\",\r\n          start: 6,\r\n          end: 11\r\n        }\r\n      }\r\n    },\r\n    address: \"رامسر - ابریشم محله\",\r\n    description: \"\"\r\n  }\r\n];\r\n\r\nexport const PRODUCT_LIST: IProduct[] = [\r\n  // - Breads\r\n  {\r\n    id: 1,\r\n    title: \"بربری آزاد ساده\",\r\n    price: 1500,\r\n    max: 30,\r\n    img: \"/images/noon/barbari-192.png\",\r\n    enable: true,\r\n    MarketId: 1,\r\n    count: 0\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"بربری آزاد کنجدی\",\r\n    price: 2000,\r\n    max: 30,\r\n    img: \"/images/noon/barbari-konjedi-192.png\",\r\n    enable: false,\r\n    MarketId: 1,\r\n    count: 0\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"سنگک آزاد ساده\",\r\n    price: 1500,\r\n    max: 30,\r\n    img: \"/images/noon/sangak-192.png\",\r\n    enable: false,\r\n    MarketId: 1,\r\n    count: 0\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"سنگک آزاد کنجدی\",\r\n    price: 2000,\r\n    max: 30,\r\n    img: \"/images/noon/sangak-konjedi-192.png\",\r\n    enable: false,\r\n    MarketId: 1,\r\n    count: 0\r\n  },\r\n  {\r\n    id: 5,\r\n    title: \"لواش\",\r\n    price: 250,\r\n    max: 100,\r\n    img: \"/images/noon/lavash-192.png\",\r\n    enable: false,\r\n    MarketId: 1,\r\n    count: 0\r\n  }\r\n];\r\n\r\nexport const TIME_LIST: IDeliverTime[] = [\r\n  { id: 1, title: \"6:00 تا 7:00 صبح\", start: 6, end: 7 },\r\n  { id: 2, title: \"7:00 تا 8:00 صبح\", start: 7, end: 8 },\r\n  { id: 3, title: \"8:00 تا 10:00 صبح\", start: 8, end: 10 },\r\n  { id: 4, title: \"17:00 تا 19:00 عصر\", start: 17, end: 19 },\r\n  { id: 5, title: \"19:00 تا 22:00 شب\", start: 19, end: 22 }\r\n];\r\n\r\n// - Todo: 3 title\r\n","import React from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport ShoppingBasket from \"@material-ui/icons/ShoppingBasket\";\r\n\r\nimport { IAppState, AppPages } from \"../../reducers/app\";\r\nimport { IShopState, ICartState } from \"../../reducers/shop\";\r\n\r\nimport {  IProduct, Markets, IMarket } from \"../../actions/shop\";\r\nimport { addToCart, removeFromCart } from \"../../actions/shopActions\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { push } from \"connected-react-router\";\r\n\r\nconst useStyles: any = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: \"100%\",\r\n      marginTop: theme.spacing(3),\r\n      overflowX: \"auto\"\r\n    },\r\n    table: {\r\n      maxWidth: \"100%\"\r\n    },\r\n    tableCell: {\r\n      fontFamily: \"Yekan\"\r\n    },\r\n    imgCell: {\r\n      padding: \"0\"\r\n    },\r\n    cellImg: {\r\n      width: \"72px\"\r\n    },\r\n    margin: {\r\n      margin: theme.spacing(1)\r\n    },\r\n    button: {\r\n      marginTop: theme.spacing(1),\r\n      fontFamily: \"Yekan\",\r\n      float: \"left\"\r\n    }\r\n  })\r\n);\r\n\r\ninterface IMatchParams {\r\n  id?: string;\r\n  name?: string;\r\n}\r\n\r\ninterface IProductProps extends RouteComponentProps<IMatchParams> {\r\n  cart: ICartState;\r\n  addToCart: Function;\r\n  removeFromCart: Function;\r\n\r\n  changePage: Function;\r\n}\r\n\r\nconst Product: React.FC<IProductProps> = (prop: IProductProps) => {\r\n  const classes: any = useStyles();\r\n\r\n  const marketId: string | undefined = prop.match.params.id;\r\n  const market: IMarket | undefined =\r\n    marketId === undefined\r\n      ? undefined\r\n      : Markets.find(m => m.id === Number(marketId));\r\n  const products: IProduct[] =\r\n    market === undefined\r\n      ? []\r\n      : market.products.map(pCart => {\r\n          pCart.count =\r\n            prop.cart === undefined || prop.cart[pCart.id] === undefined\r\n              ? 0\r\n              : prop.cart[pCart.id];\r\n          return pCart;\r\n        });\r\n\r\n  // console.log(marketId, market, products);\r\n\r\n  const totalPrice: number = products.reduce(\r\n    (sum, p) => sum + p.count * p.price,\r\n    0\r\n  );\r\n\r\n  // if products=0 => به زودی\r\n\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <Paper className={classes.root}>\r\n        <Table className={classes.table}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell className={classes.tableCell} align=\"center\">\r\n                تصویر محصول\r\n              </TableCell>\r\n              <TableCell className={classes.tableCell} align=\"center\">\r\n                نام و قیمت هر واحد\r\n              </TableCell>\r\n              <TableCell className={classes.tableCell} align=\"center\">\r\n                تعداد سفارش\r\n              </TableCell>\r\n              <TableCell className={classes.tableCell} align=\"center\">\r\n                قیمت\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {products.map(product => (\r\n              <TableRow key={product.id}>\r\n                <TableCell className={classes.imgCell} align=\"center\">\r\n                  <img\r\n                    className={classes.cellImg}\r\n                    src={process.env.PUBLIC_URL + product.img}\r\n                    alt={product.title}\r\n                  />\r\n                </TableCell>\r\n                <TableCell\r\n                  className={classes.tableCell}\r\n                  component=\"td\"\r\n                  scope=\"row\"\r\n                  align=\"center\"\r\n                >\r\n                  {product.title}\r\n                  <br />\r\n                  {product.price} تومان\r\n                </TableCell>\r\n                <TableCell\r\n                  className={classes.tableCell}\r\n                  component=\"td\"\r\n                  scope=\"row\"\r\n                  align=\"center\"\r\n                >\r\n                  {product.max !== undefined && product.count >= product.max ? (\r\n                    <Fab\r\n                      size=\"small\"\r\n                      // color=\"secondary\"\r\n                      aria-label=\"add\"\r\n                      className={classes.margin}\r\n                      // onClick={event => prop.addToCart(event, product.id)}\r\n                    >\r\n                      <AddIcon />\r\n                    </Fab>\r\n                  ) : (\r\n                    <Fab\r\n                      size=\"small\"\r\n                      color=\"secondary\"\r\n                      aria-label=\"add\"\r\n                      className={classes.margin}\r\n                      onClick={event =>\r\n                        prop.addToCart(event, product.id, marketId)\r\n                      }\r\n                    >\r\n                      <AddIcon />\r\n                    </Fab>\r\n                  )}\r\n\r\n                  {product.count}\r\n\r\n                  {product.count > 0 ? (\r\n                    <Fab\r\n                      size=\"small\"\r\n                      color=\"secondary\"\r\n                      aria-label=\"add\"\r\n                      className={classes.margin}\r\n                      onClick={event =>\r\n                        prop.removeFromCart(event, product.id, marketId)\r\n                      }\r\n                    >\r\n                      <RemoveIcon />\r\n                    </Fab>\r\n                  ) : (\r\n                    <Fab\r\n                      size=\"small\"\r\n                      // color=\"secondary\"\r\n                      aria-label=\"add\"\r\n                      className={classes.margin}\r\n                      // onClick={event => prop.removeFromCart(event, product.id)}\r\n                    >\r\n                      <RemoveIcon />\r\n                    </Fab>\r\n                  )}\r\n                </TableCell>\r\n                <TableCell\r\n                  className={classes.tableCell}\r\n                  component=\"td\"\r\n                  scope=\"row\"\r\n                  align=\"center\"\r\n                >\r\n                  {product.count * product.price} تومان\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n            <TableRow>\r\n              <TableCell className={classes.tableCell} colSpan={3}>\r\n                مجموع قیمت ها\r\n              </TableCell>\r\n              <TableCell className={classes.tableCell} align=\"center\">\r\n                {totalPrice} تومان\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n      {totalPrice > 0 && (\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.button}\r\n          onClick={() =>\r\n            prop.changePage(process.env.PUBLIC_URL + \"/\" + AppPages.ADDRESS)\r\n          }\r\n        >\r\n          تکمیل خرید\r\n          <ShoppingBasket className={classes.extendedIcon} />\r\n        </Button>\r\n      )}\r\n      {/* <ButtonGroup\r\n        className={classes.btnGroup}\r\n        fullWidth\r\n        aria-label=\"full width contained button group\"\r\n      >\r\n        <Button\r\n          color=\"secondary\"\r\n          className={classes.btnGroup}\r\n          // href={process.env.PUBLIC_URL + \"/checkout\"}\r\n          onClick={() =>\r\n            prop.changePage(process.env.PUBLIC_URL + \"/\" + AppPages.CHECKOUT)\r\n          }\r\n        >\r\n          <ShoppingBasket className={classes.extendedIcon} />\r\n          <h4 className={classes.btnText}>سبد خرید</h4>\r\n        </Button>\r\n        <Button\r\n          color=\"primary\"\r\n          className={classes.btnGroup}\r\n          // href={process.env.PUBLIC_URL + \"/\"}\r\n          onClick={() => prop.changePage(process.env.PUBLIC_URL + \"/\")}\r\n        >\r\n          <ViewModule className={classes.extendedIcon} />\r\n          <h4 className={classes.btnText}>ادامه خرید</h4>\r\n        </Button>\r\n      </ButtonGroup> */}\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapStateToProps: any = (State: { app: IAppState; shop: IShopState }) => ({\r\n  cart: State.shop.cart\r\n});\r\n\r\nconst mapDispatchToProps: any = {\r\n  // changePage: changePage\r\n  addToCart: addToCart,\r\n  removeFromCart: removeFromCart,\r\n  changePage: (url: string) => push(url)\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Product);\r\n","import React from \"react\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\r\n\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nimport ViewModule from \"@material-ui/icons/ViewModule\";\r\nimport ImportantDevices from \"@material-ui/icons/ImportantDevices\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nimport { push } from \"connected-react-router\";\r\nimport { connect } from \"react-redux\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { IAppState, AppPages } from \"../../reducers/app\";\r\nimport { IShopState } from \"../../reducers/shop\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1\r\n    },\r\n    menuButton: {\r\n      marginLeft: theme.spacing(2)\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n      fontFamily: \"Yekan\"\r\n    },\r\n    list: {\r\n      width: 250\r\n    },\r\n    fullList: {\r\n      width: \"auto\"\r\n    },\r\n    menuTitle: {\r\n      textAlign: \"right\"\r\n    }\r\n  })\r\n);\r\n\r\ninterface IMiniHeaderProps {\r\n  changePage: Function;\r\n}\r\n\r\nconst MiniHeader: React.FC<IMiniHeaderProps> = (prop: IMiniHeaderProps) => {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false\r\n  });\r\n\r\n  type DrawerSide = \"top\" | \"left\" | \"bottom\" | \"right\";\r\n  const toggleDrawer = (side: DrawerSide, open: boolean) => (\r\n    event: React.KeyboardEvent | React.MouseEvent\r\n  ) => {\r\n    if (\r\n      event.type === \"keydown\" &&\r\n      ((event as React.KeyboardEvent).key === \"Tab\" ||\r\n        (event as React.KeyboardEvent).key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [side]: open });\r\n  };\r\n\r\n  const sideList = (side: DrawerSide) => (\r\n    <div\r\n      className={classes.list}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(side, false)}\r\n      onKeyDown={toggleDrawer(side, false)}\r\n    >\r\n      <List>\r\n        <ListItem\r\n          button\r\n          component={Button}\r\n          // to={process.env.PUBLIC_URL + \"/\"}\r\n          onClick={() => prop.changePage(process.env.PUBLIC_URL + \"/\")}\r\n          key=\"main\"\r\n        >\r\n          <ListItemIcon>\r\n            <ViewModule />\r\n          </ListItemIcon>\r\n          <ListItemText className={classes.menuTitle} primary=\"صفحه اصلی\" />\r\n        </ListItem>\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        <ListItem\r\n          button\r\n          component={Button}\r\n          // to={process.env.PUBLIC_URL + \"/about\"}\r\n          onClick={() =>\r\n            prop.changePage(process.env.PUBLIC_URL + \"/\" + AppPages.ABOUT)\r\n          }\r\n          key=\"about\"\r\n        >\r\n          <ListItemIcon>\r\n            <ImportantDevices />\r\n          </ListItemIcon>\r\n          <ListItemText className={classes.menuTitle} primary=\"درباره ما\" />\r\n        </ListItem>\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            onClick={toggleDrawer(\"right\", true)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            نون\r\n          </Typography>\r\n          <IconButton edge=\"end\" color=\"inherit\">\r\n            <MoreIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        anchor=\"right\"\r\n        open={state.right}\r\n        onClose={toggleDrawer(\"right\", false)}\r\n      >\r\n        {sideList(\"right\")}\r\n      </Drawer>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (State: { app: IAppState; shop: IShopState }) => ({\r\n  // cart: State.shop.cart\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  // changePage: changePage\r\n  changePage: (url: string) => push(url)\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MiniHeader);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\n\r\nimport { push } from \"connected-react-router\";\r\nimport { connect } from \"react-redux\";\r\nimport { IAppState, AppPages } from \"../../reducers/app\";\r\nimport { IShopState } from \"../../reducers/shop\";\r\n\r\nconst useStyles = makeStyles({\r\n  title: {\r\n    textAlign: \"center\"\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    fontFamily: \"Yekan\"\r\n  },\r\n  tab: {\r\n    fontFamily: \"Yekan\"\r\n  },\r\n  titleImg: {\r\n    verticalAlign: \"middle\"\r\n  }\r\n});\r\n\r\ninterface IBigHeaderProps {\r\n  tabId?: number;\r\n  changePage: Function;\r\n}\r\n\r\nconst BigHeader: React.FC<IBigHeaderProps> = (prop: IBigHeaderProps) => {\r\n  const classes: any = useStyles();\r\n\r\n  const [value, setValue] = React.useState(0);\r\n  function handleChange(event: React.ChangeEvent<{}>, newValue: number) {\r\n    setValue(newValue);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2 className={classes.title}>\r\n        <img\r\n          className={classes.titleImg}\r\n          src={process.env.PUBLIC_URL + \"/icon-48x48.png\"}\r\n          alt=\"logo\"\r\n        />\r\n        نون\r\n      </h2>\r\n      <Paper className={classes.root}>\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          // value={prop.tabId}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          centered\r\n        >\r\n          <Tab\r\n            className={classes.tab}\r\n            label=\"صفحه اصلی\"\r\n            // href={process.env.PUBLIC_URL + \"/\"}\r\n            onClick={() => prop.changePage(process.env.PUBLIC_URL + \"/\")}\r\n          />\r\n          <Tab\r\n            className={classes.tab}\r\n            label=\"ارتباط با ما\"\r\n            // href={process.env.PUBLIC_URL + \"/about\"}\r\n            onClick={() =>\r\n              prop.changePage(process.env.PUBLIC_URL + \"/\" + AppPages.ABOUT)\r\n            }\r\n          />\r\n          {/* <Tab className={classes.tab} label=\"Item Three\" /> */}\r\n        </Tabs>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (State: { app: IAppState; shop: IShopState }) => ({\r\n  // cart: State.shop.cart\r\n  tabId: State.app.pageId\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  // changePage: changePage\r\n  changePage: (url: string) => push(url)\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(BigHeader);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport MiniHeader from \"./mini-header\";\r\nimport BigHeader from \"./big-header\";\r\n\r\nconst MainHeader: React.FC = () => {\r\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 500);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", () => {\r\n      setIsMobile(window.innerWidth <= 500);\r\n    });\r\n  });\r\n\r\n  if (isMobile) {\r\n    return <MiniHeader />;\r\n  } else {\r\n    return <BigHeader />;\r\n  }\r\n};\r\n\r\nexport default MainHeader;\r\n","import React from \"react\";\r\nimport { Theme, createStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { IAppState } from \"../../reducers/app\";\r\nimport { IShopState } from \"../../reducers/shop\";\r\nimport { connect } from \"react-redux\";\r\nimport { push } from \"connected-react-router\";\r\n\r\nconst useStyles: any = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      padding: theme.spacing(3, 2),\r\n      margin: theme.spacing(3, 2)\r\n    },\r\n    myFont: {\r\n      fontFamily: \"Yekan\"\r\n    },\r\n    btn: {\r\n      fontFamily: \"Yekan\",\r\n      textAlign: \"left\",\r\n      margin: theme.spacing(1, 2)\r\n    }\r\n  })\r\n);\r\n\r\ninterface ISoonProps {\r\n  // tabId?: number;\r\n  // changeTabId: Function;\r\n  changePage: Function;\r\n}\r\n\r\nconst Soon: React.FC<ISoonProps> = (prop: ISoonProps) => {\r\n  const classes: any = useStyles();\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <Paper className={classes.root}>\r\n        <Typography className={classes.myFont} variant=\"h5\" component=\"h3\">\r\n          این بخش در حال ساخت می باشد.\r\n        </Typography>\r\n        <Typography className={classes.myFont} component=\"p\">\r\n          به زودی این بخش ساخته می شود و در دسترس قرار می گیرد\r\n        </Typography>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.btn}\r\n          onClick={() => prop.changePage(process.env.PUBLIC_URL + \"/\")}\r\n        >\r\n          بازگشت به صفحه اصلی\r\n        </Button>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (State: { app: IAppState; shop: IShopState }) => ({\r\n  // cart: State.shop.cart\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  // changePage: changePage\r\n  changePage: (url: string) => push(url)\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Soon);\r\n","import React from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { IAppState, AppPages } from \"../../reducers/app\";\r\nimport { IShopState, IDeliverState } from \"../../reducers/shop\";\r\nimport {\r\n  ChangeDeliverKind,\r\n  ChangeDeliverDistrict,\r\n  ChangeMobile,\r\n  ChangeFullname,\r\n  ChangeAddress,\r\n  ChangeDate,\r\n  LoadUserInfo,\r\n  LoadLocation\r\n} from \"../../actions/shopActions\";\r\n\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport RecentActorsIcon from \"@material-ui/icons/RecentActors\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport NotListedLocationIcon from \"@material-ui/icons/NotListedLocation\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ShoppingBasket from \"@material-ui/icons/ShoppingBasket\";\r\n\r\nimport { push } from \"connected-react-router\";\r\n\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nimport moment from \"moment\";\r\nimport jMoment, { Moment } from \"moment-jalaali\";\r\nimport JalaliUtils from \"@date-io/jalaali\";\r\n\r\n// import LuxonUtils from \"@date-io/luxon\";\r\nimport {\r\n  DateTimePicker,\r\n  MuiPickersUtilsProvider,\r\n  MaterialUiPickersDate\r\n} from \"@material-ui/pickers\";\r\n\r\ndeclare global {\r\n  interface Date {\r\n    format(arg: any): string;\r\n  }\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    container: {\r\n      display: \"flex\",\r\n      flexWrap: \"wrap\"\r\n    },\r\n    textField: {\r\n      // marginLeft: theme.spacing(1),\r\n      // marginRight: theme.spacing(1),\r\n      fontFamily: \"Yekan\"\r\n      // width: 200\r\n    },\r\n    dense: {\r\n      marginTop: 19\r\n    },\r\n    menu: {\r\n      width: 200\r\n    },\r\n    margin: {\r\n      // margin: theme.spacing(1),\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n      width: \"100%\"\r\n    },\r\n    textField2: {\r\n      /*flexBasis: 200*/\r\n    },\r\n    grid: {\r\n      paddingTop: theme.spacing(2)\r\n    },\r\n    selectFormControl: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n      width: \"100%\"\r\n    },\r\n    pickerGrid: {\r\n      // direction: \"ltr\",\r\n      // width: \"100%\"\r\n      // fontFamily: \"Yekan\"\r\n    },\r\n    picker: {\r\n      direction: \"ltr\",\r\n      width: \"100%\",\r\n      textAlign: \"right\"\r\n      // fontFamily: \"Yekan\"\r\n    },\r\n    button: {\r\n      fontFamily: \"Yekan\"\r\n    }\r\n  })\r\n);\r\n\r\n// interface IAddressState {\r\n//   // name: string;\r\n//   // mobile: string;\r\n//   // address: string;\r\n\r\n//   // age: string;\r\n//   // date: Moment;\r\n\r\n//   // loadingInfo: boolean;\r\n//   //loadingAddress: boolean;\r\n// }\r\n\r\ninterface IAddressProp {\r\n  deliver: IDeliverState;\r\n\r\n  ChangeDeliverKind: Function;\r\n  ChangeDeliverDistrict: Function;\r\n  ChangeMobile: Function;\r\n  ChangeFullname: Function;\r\n  ChangeAddress: Function;\r\n  ChangeDate: Function;\r\n  LoadUserInfo: Function;\r\n  LoadLocation: Function;\r\n  changePage: Function;\r\n}\r\n\r\nconst Address: React.FC<IAddressProp> = (prop: IAddressProp) => {\r\n  const classes: any = useStyles();\r\n\r\n  // const [values, setValues] = React.useState<IAddressState>({\r\n  //   // name: \"\",\r\n  //   // mobile: \"\",\r\n  //   // address: \"\",\r\n  //   // age: \"\",\r\n  //   // // date: new Date(),\r\n  //   // date: moment(),\r\n\r\n  //   // loadingInfo: false,\r\n  //   //loadingAddress: false\r\n  // });\r\n\r\n  const handleClickLoadingInfo = () => {\r\n    const mobile: string = prop.deliver.mobile;\r\n    prop.LoadUserInfo(mobile);\r\n  };\r\n\r\n  const handleClickLoadingAddress = () => {\r\n    prop.LoadLocation();\r\n    //setValues({ ...values, loadingAddress: !values.loadingAddress });\r\n  };\r\n\r\n  jMoment.loadPersian({ dialect: \"persian-modern\", usePersianDigits: false });\r\n\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <Grid\r\n        className={classes.grid}\r\n        container\r\n        spacing={3}\r\n        justify=\"space-around\"\r\n        alignItems=\"stretch\"\r\n      >\r\n        <Grid item xs={12} sm={8}>\r\n          <FormControl className={classes.selectFormControl}>\r\n            <InputLabel htmlFor=\"deliverKind-helper\">شیوه دریافت</InputLabel>\r\n            <Select\r\n              value={prop.deliver.deliverKind}\r\n              // onChange={handleChange2}\r\n              onChange={event =>\r\n                prop.ChangeDeliverKind(event, event.target.value)\r\n              }\r\n              inputProps={{\r\n                name: \"deliverKind\",\r\n                id: \"deliverKind-helper\"\r\n              }}\r\n            >\r\n              <MenuItem value=\"\">\r\n                <em>هیچکدام</em>\r\n              </MenuItem>\r\n              <MenuItem value={\"expressSend\"}>ارسال فوری</MenuItem>\r\n              <MenuItem value={\"futureSend\"}>ارسال در آینده</MenuItem>\r\n              <MenuItem value={\"takeout\"}>دریافت حضوری</MenuItem>\r\n              <MenuItem value={\"reserve\"}>رزرو مکان</MenuItem>\r\n              <MenuItem value={\"futureTakeout\"}>تحویل حضوری در آینده</MenuItem>\r\n            </Select>\r\n            <FormHelperText>شیوه دریافت را انتخاب کنید</FormHelperText>\r\n          </FormControl>\r\n        </Grid>\r\n\r\n        {prop.deliver.deliverKind !== \"\" && (\r\n          <React.Fragment>\r\n            <Grid item xs={12} sm={8}>\r\n              <FormControl className={clsx(classes.margin, classes.textField)}>\r\n                <InputLabel htmlFor=\"adornment-mobile\">موبایل</InputLabel>\r\n                <Input\r\n                  id=\"adornment-mobile\"\r\n                  value={prop.deliver.mobile}\r\n                  fullWidth\r\n                  onChange={event =>\r\n                    prop.ChangeMobile(event, event.target.value)\r\n                  }\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton\r\n                        aria-label=\"toggle mobile visibility\"\r\n                        onClick={handleClickLoadingInfo}\r\n                        // onClick={prop.LoadUserInfo(prop.deliver.mobile)}\r\n                        onMouseDown={event => event.preventDefault()}\r\n                      >\r\n                        {prop.deliver.loadingInfo ? (\r\n                          <CircularProgress />\r\n                        ) : (\r\n                          <RecentActorsIcon />\r\n                        )}\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                />\r\n                <FormHelperText id=\"component-helper-text\">\r\n                  اگر قبلا مشتری بودید بعد از وارد کردن موبایل، روی دکمه کلیک\r\n                  کنید\r\n                </FormHelperText>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={8}>\r\n              <TextField\r\n                id=\"standard-name\"\r\n                label=\"نام\"\r\n                fullWidth\r\n                className={clsx(classes.margin, classes.textField)}\r\n                value={prop.deliver.fullname}\r\n                onChange={event =>\r\n                  prop.ChangeFullname(event, event.target.value)\r\n                }\r\n                margin=\"normal\"\r\n              />\r\n            </Grid>\r\n          </React.Fragment>\r\n        )}\r\n\r\n        {(prop.deliver.deliverKind === \"futureSend\" ||\r\n          prop.deliver.deliverKind === \"reserve\" ||\r\n          prop.deliver.deliverKind === \"futureTakeout\") && (\r\n          <Grid item xs={12} sm={6} className={classes.pickerGrid}>\r\n            <MuiPickersUtilsProvider utils={JalaliUtils} locale=\"fa\">\r\n              <DateTimePicker\r\n                className={classes.picker}\r\n                label=\"زمان تحویل یا دریافت\"\r\n                minDate={new Date()}\r\n                okLabel=\"تأیید\"\r\n                cancelLabel=\"لغو\"\r\n                labelFunc={date =>\r\n                  date ? date.format(\"jYYYY/jMM/jDD hh:mm A\") : \"\"\r\n                }\r\n                value={prop.deliver.date}\r\n                //onChange={handleDateChange}\r\n                onChange={date => {\r\n                  if (date != null) {\r\n                    prop.ChangeDate(date);\r\n                  }\r\n                }}\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n          </Grid>\r\n        )}\r\n\r\n        {(prop.deliver.deliverKind === \"expressSend\" ||\r\n          prop.deliver.deliverKind === \"futureSend\") && (\r\n          <React.Fragment>\r\n            <Grid item xs={12} sm={8}>\r\n              <FormControl className={classes.selectFormControl}>\r\n                <InputLabel htmlFor=\"deliverDistrict-helper\">\r\n                  محدوده دریافت\r\n                </InputLabel>\r\n                <Select\r\n                  value={prop.deliver.deliverDistrict}\r\n                  // onChange={handleChange2}\r\n                  onChange={event =>\r\n                    prop.ChangeDeliverDistrict(event, event.target.value)\r\n                  }\r\n                  inputProps={{\r\n                    name: \"deliverDistrict\",\r\n                    id: \"deliverDistrict-helper\"\r\n                  }}\r\n                >\r\n                  <MenuItem value=\"\">\r\n                    <em>هیچکدام</em>\r\n                  </MenuItem>\r\n                  <MenuItem value={\"abrisham\"}>\r\n                    ابریشم محله و بیست متری\r\n                  </MenuItem>\r\n                  <MenuItem value={\"katalom\"}>کتالم و سادات شهر</MenuItem>\r\n                  <MenuItem value={\"rejaee\"}>رضی محله و میدان رجایی</MenuItem>\r\n                  <MenuItem value={\"latmahale\"}>تنگه دره و لات محله</MenuItem>\r\n                </Select>\r\n                <FormHelperText>محدوده دریافت را انتخاب کنید</FormHelperText>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={8}>\r\n              <FormControl className={clsx(classes.margin, classes.textField2)}>\r\n                <InputLabel htmlFor=\"adornment-address\">آدرس</InputLabel>\r\n                <Input\r\n                  id=\"adornment-address\"\r\n                  value={prop.deliver.address}\r\n                  multiline\r\n                  fullWidth\r\n                  // onChange={handleChange(\"address\")}\r\n                  onChange={event =>\r\n                    prop.ChangeAddress(event, event.target.value)\r\n                  }\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton\r\n                        aria-label=\"toggle address visibility\"\r\n                        onClick={handleClickLoadingAddress}\r\n                        onMouseDown={event => event.preventDefault()}\r\n                      >\r\n                        {prop.deliver.loadingLocation ? (\r\n                          <CircularProgress />\r\n                        ) : (\r\n                          <NotListedLocationIcon />\r\n                        )}\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                />\r\n                <FormHelperText id=\"component-helper-text\">\r\n                  برای تعیین موقعیت فعلی روی دکمه کلیک کنید\r\n                </FormHelperText>\r\n              </FormControl>\r\n            </Grid>\r\n          </React.Fragment>\r\n        )}\r\n\r\n        {prop.deliver.deliverKind !== \"\" &&\r\n          prop.deliver.mobile.length > 9 &&\r\n          prop.deliver.fullname.length > 3 &&\r\n          (prop.deliver.deliverKind === \"expressSend\" ||\r\n            prop.deliver.deliverKind === \"takeout\" ||\r\n            prop.deliver.date != null) &&\r\n          ((prop.deliver.deliverKind !== \"expressSend\" &&\r\n            prop.deliver.deliverKind !== \"futureSend\") ||\r\n            (prop.deliver.address.length > 3 &&\r\n              (prop.deliver.deliverDistrict !== \"\" ||\r\n                prop.deliver.location != null))) && (\r\n            <Grid item xs={12} sm={8}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                onClick={() =>\r\n                  prop.changePage(\r\n                    process.env.PUBLIC_URL + \"/\" + AppPages.CHECKOUT\r\n                  )\r\n                }\r\n              >\r\n                تائید خرید\r\n                <ShoppingBasket className={classes.extendedIcon} />\r\n              </Button>\r\n            </Grid>\r\n          )}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapStateToProps: any = (State: { app: IAppState; shop: IShopState }) => ({\r\n  // cart: State.shop.cart,\r\n  deliver: State.shop.deliver\r\n});\r\n\r\nconst mapDispatchToProps: any = {\r\n  ChangeDeliverKind,\r\n  ChangeDeliverDistrict,\r\n  ChangeMobile,\r\n  ChangeFullname,\r\n  ChangeAddress,\r\n  ChangeDate,\r\n  LoadUserInfo,\r\n  LoadLocation,\r\n  // changePage: changePage\r\n  // addToCart: addToCart,\r\n  // removeFromCart: removeFromCart,\r\n  changePage: (url: string) => push(url)\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Address);\r\n","import React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { IAppState } from \"../../reducers/app\";\r\nimport { IShopState, ICartState } from \"../../reducers/shop\";\r\nimport { connect } from \"react-redux\";\r\nimport { push } from \"connected-react-router\";\r\n\r\nimport { Theme, createStyles, makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { PRODUCT_LIST, IProduct } from \"../../actions/shop\";\r\n\r\nconst useStyles: any = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    mainTitle: {\r\n      fontFamily: \"Yekan\"\r\n    },\r\n    companyLink: {\r\n      fontFamily: \"Yekan\",\r\n      padding: \"2px\"\r\n    },\r\n    root: {\r\n      padding: theme.spacing(3, 2),\r\n      margin: theme.spacing(3, 2)\r\n    },\r\n    myFont: {\r\n      fontFamily: \"Yekan\"\r\n    },\r\n    btn: {\r\n      fontFamily: \"Yekan\",\r\n      textAlign: \"left\",\r\n      margin: theme.spacing(1, 2)\r\n    }\r\n  })\r\n);\r\n\r\ninterface ICheckoutProps {\r\n  cart: ICartState;\r\n  changePage: Function;\r\n}\r\n\r\nconst Checkout: React.FC<ICheckoutProps> = (prop: ICheckoutProps) => {\r\n  const classes = useStyles();\r\n\r\n  const products: IProduct[] = PRODUCT_LIST.map(pCart => {\r\n    pCart.count =\r\n      prop.cart === undefined || prop.cart[pCart.id] === undefined\r\n        ? 0\r\n        : prop.cart[pCart.id];\r\n    return pCart;\r\n  }).filter(p => p.count !== 0);\r\n\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <h3 className={classes.mainTitle}>لیست سفارش ها</h3>\r\n      {products.length === 0 ? (\r\n        <Paper className={classes.root}>\r\n          <Typography className={classes.myFont} variant=\"h5\" component=\"h3\">\r\n            سبد خرید خالی هست!\r\n          </Typography>\r\n          <Typography className={classes.myFont} component=\"p\">\r\n            لطفاً کالا یا کالاهایی را انتخاب کنید.\r\n          </Typography>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.btn}\r\n            onClick={() => prop.changePage(process.env.PUBLIC_URL + \"/\")}\r\n          >\r\n            بازگشت به صفحه اصلی\r\n          </Button>\r\n        </Paper>\r\n      ) : (\r\n        <>\r\n          {products.map(p => (\r\n            <h4>\r\n              {p.count} * {p.title}\r\n            </h4>\r\n          ))}\r\n          <h4>مجموع</h4>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (State: { app: IAppState; shop: IShopState }) => ({\r\n  cart: State.shop.cart\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  // changePage: changePage\r\n  changePage: (url: string) => push(url)\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Checkout);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport LoyaltyIcon from \"@material-ui/icons/Loyalty\";\r\nimport MeetingRoomIcon from \"@material-ui/icons/MeetingRoom\";\r\nimport NoMeetingRoomIcon from \"@material-ui/icons/NoMeetingRoom\";\r\nimport LocalShippingIcon from \"@material-ui/icons/LocalShipping\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    display: \"flex\"\r\n  },\r\n  details: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\"\r\n  },\r\n  content: {\r\n    flex: \"1 0 auto\"\r\n  },\r\n  cover: {\r\n    width: \"30%\",\r\n    backgroundSize: \"contain\"\r\n  },\r\n  controls: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingLeft: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1)\r\n  },\r\n  playIcon: {\r\n    height: 38,\r\n    width: 38\r\n  },\r\n  persianfont: {\r\n    fontFamily: \"Yekan\"\r\n  },\r\n  chip: {\r\n    fontFamily: \"Yekan\",\r\n    // padding: theme.spacing(1),\r\n    margin: \"2px\"\r\n  }\r\n}));\r\n\r\ninterface IMarketCartProp {\r\n  title: string;\r\n  subtitle?: string;\r\n  img: string;\r\n  open: boolean;\r\n  address?: string;\r\n  discount?: number;\r\n  freeDeliver?: boolean;\r\n}\r\n\r\nconst MarketCart: React.FC<IMarketCartProp> = ({\r\n  title,\r\n  subtitle,\r\n  img,\r\n  open,\r\n  address,\r\n  discount,\r\n  freeDeliver\r\n}) => {\r\n  // const MarketCart: React.FC = (title: string, subtitle: string, img: string) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardMedia\r\n        className={classes.cover}\r\n        image={process.env.PUBLIC_URL + img}\r\n        title=\"Live from space album cover\"\r\n      />\r\n\r\n      <div className={classes.details}>\r\n        <CardContent className={classes.content}>\r\n          <Typography\r\n            className={classes.persianfont}\r\n            component=\"h5\"\r\n            variant=\"h5\"\r\n          >\r\n            {title}\r\n          </Typography>\r\n          {subtitle !== undefined && (\r\n            <Typography\r\n              className={classes.persianfont}\r\n              variant=\"subtitle1\"\r\n              color=\"textSecondary\"\r\n            >\r\n              {subtitle}\r\n            </Typography>\r\n          )}\r\n          {address !== undefined && (\r\n            <Typography\r\n              className={classes.persianfont}\r\n              variant=\"subtitle1\"\r\n              color=\"textSecondary\"\r\n            >\r\n              {address}\r\n            </Typography>\r\n          )}\r\n          {open ? (\r\n            <Chip\r\n              icon={<MeetingRoomIcon />}\r\n              label=\"باز است\"\r\n              clickable\r\n              className={classes.chip}\r\n              variant=\"outlined\"\r\n            />\r\n          ) : (\r\n            <Chip\r\n              icon={<NoMeetingRoomIcon />}\r\n              label=\"بسته است\"\r\n              clickable\r\n              className={classes.chip}\r\n              color=\"primary\"\r\n              variant=\"outlined\"\r\n            />\r\n          )}\r\n          {discount !== undefined && discount > 0 && (\r\n            <Chip\r\n              icon={<LoyaltyIcon />}\r\n              label={discount + \" درصد تخفیف\"}\r\n              clickable\r\n              className={classes.chip}\r\n              color=\"secondary\"\r\n              // variant=\"outlined\"\r\n            />\r\n          )}\r\n          {freeDeliver !== undefined && freeDeliver === true && (\r\n            <Chip\r\n              icon={<LocalShippingIcon />}\r\n              label=\"تحویل رایگان\"\r\n              clickable\r\n              className={classes.chip}\r\n              color=\"primary\"\r\n              // variant=\"outlined\"\r\n            />\r\n          )}\r\n        </CardContent>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default MarketCart;\r\n\r\n/*\r\nimport React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    maxWidth: \"100%\"\r\n  },\r\n  media: {\r\n    height: 140\r\n  }\r\n});\r\n\r\nexport default function MediaCard() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          className={classes.media}\r\n          // image=\"/images/group/shopping-cart.png\"\r\n          image={process.env.PUBLIC_URL + \"/images/group/shopping-cart.png\"}\r\n          title=\"Contemplative Reptile\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            Lizard\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            Lizards are a widespread group of squamate reptiles, with over 6,000\r\n            species, ranging across all continents except Antarctica\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n}\r\n*/\r\n","import React from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport MarketCart from \"./market-cart\";\r\n\r\nimport { IAppState, AppPages } from \"../../../reducers/app\";\r\nimport { IShopState } from \"../../../reducers/shop\";\r\nimport { connect } from \"react-redux\";\r\nimport { push } from \"connected-react-router\";\r\n\r\nimport { loadData } from \"../../../actions/shopActions\";\r\n\r\nimport { IDbOpenTime, IDbMarket, IDbInfo } from \"../../../actions/shop\";\r\n\r\nconst useStyles: any = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  grid: {\r\n    paddingTop: theme.spacing(2)\r\n  },\r\n  littleGrid: { cursor: \"pointer\" },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary\r\n  },\r\n  link: {\r\n    textDecoration: \"none\"\r\n  }\r\n}));\r\n\r\ninterface IMatchParams {\r\n  id?: string;\r\n  name?: string;\r\n}\r\n\r\ninterface IMarketProps extends RouteComponentProps<IMatchParams> {\r\n  // tabId?: number;\r\n  // changeTabId: Function;\r\n  dbInfo?: IDbInfo;\r\n  markets?: IDbMarket[];\r\n  openTimes?: IDbOpenTime[];\r\n  changePage: Function;\r\n  loadData: Function;\r\n}\r\n\r\nconst Market: React.FC<IMarketProps> = (prop: IMarketProps) => {\r\n  const classes: any = useStyles();\r\n\r\n  const groupId: string | undefined = prop.match.params.id;\r\n  // useEffect(() => {\r\n  //   prop.changeTabId(0);\r\n  // });\r\n\r\n  // console.log(prop.tabId);\r\n\r\n  React.useEffect(() => {\r\n    // prop.changeTabId(0);\r\n    if (prop.dbInfo === undefined) {\r\n      prop.loadData();\r\n    }\r\n  }, [prop]);\r\n\r\n  // const markets: IMarket[] = Markets.filter(\r\n  //   m => m.marketGroupId === Number(groupId)\r\n  // );\r\n\r\n  const dbMarkets: IDbMarket[] | undefined =\r\n    prop.markets &&\r\n    prop.markets.filter(\r\n      (m: IDbMarket) => Number(m.groups_id) === Number(groupId)\r\n    );\r\n\r\n  const date: Date = new Date();\r\n  const dayofweek: number = date.getDay();\r\n  const hour: number = date.getHours() + date.getMinutes() / 100;\r\n\r\n  const dbMarketsExtended =\r\n    dbMarkets &&\r\n    dbMarkets.map(m => {\r\n      const openTimes: IDbOpenTime[] | undefined =\r\n        prop.openTimes &&\r\n        prop.openTimes.filter(\r\n          (t: IDbOpenTime) =>\r\n            Number(t.markets_id) === Number(m.id) &&\r\n            Number(t.dayNumber) === dayofweek &&\r\n            Number(t.startTime) <= hour &&\r\n            hour <= t.endTime\r\n        );\r\n      const isOpen: boolean = openTimes !== undefined && openTimes.length > 0;\r\n      return { ...m, isOpen };\r\n    });\r\n\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <Grid\r\n        className={classes.grid}\r\n        container\r\n        spacing={3}\r\n        justify=\"space-around\"\r\n        alignItems=\"stretch\"\r\n      >\r\n        {dbMarketsExtended !== undefined &&\r\n          dbMarketsExtended.map(market => (\r\n            <Grid\r\n              className={classes.littleGrid}\r\n              key={market.id}\r\n              item\r\n              xs={12}\r\n              sm={6}\r\n              onClick={() =>\r\n                prop.changePage(\r\n                  market.enabled\r\n                    ? \"/\" +\r\n                        AppPages.PRODUCT +\r\n                        \"/\" +\r\n                        market.id +\r\n                        \"/\" +\r\n                        market.title\r\n                    : \"/\" + AppPages.SOON\r\n                )\r\n              }\r\n            >\r\n              <MarketCart\r\n                title={market.persianTitle}\r\n                subtitle={market.persianSubtitle}\r\n                img={market.img}\r\n                open={market.isOpen}\r\n                address={market.address}\r\n                discount={market.discount}\r\n                freeDeliver={market.freeDeliver}\r\n              />\r\n            </Grid>\r\n          ))}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (State: { app: IAppState; shop: IShopState }) => ({\r\n  // cart: State.shop.cart\r\n  tabId: State.app.tabId,\r\n  dbInfo: State.shop.dbInfo,\r\n  markets: State.shop.dbInfo && State.shop.dbInfo.markets,\r\n  openTimes: State.shop.dbInfo && State.shop.dbInfo.openTimes\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  // changePage: changePage\r\n  // changeTabId: changeTabId\r\n  loadData,\r\n  changePage: (url: string) => push(url)\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Market);\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router\";\r\n\r\nimport Main from \"./pages/mainPage/main\";\r\nimport NotFound from \"./pages/notFound\";\r\nimport About from \"./pages/about\";\r\nimport Product from \"./pages/product\";\r\nimport MainHeader from \"./headers/main-header\";\r\nimport Soon from \"./pages/soon\";\r\nimport Address from \"./pages/address\";\r\nimport Checkout from \"./pages/checkout\";\r\nimport Market from \"./pages/marketsPage/market\";\r\n\r\nimport { push } from \"connected-react-router\";\r\nimport { connect } from \"react-redux\";\r\nimport { IAppState, AppPages } from \"../reducers/app\";\r\nimport { IShopState } from \"../reducers/shop\";\r\n\r\nimport \"./App.css\";\r\n\r\ninterface IAppProps {\r\n  tabId?: number;\r\n  changePage: Function;\r\n}\r\n\r\nconst App: React.FC<IAppProps> = (prop: IAppProps) => {\r\n  // console.log(\"app:\", prop.tabId);\r\n  return (\r\n    <div className=\"App\">\r\n      <MainHeader />\r\n      <section>\r\n        <Switch>\r\n          <Route exact path={process.env.PUBLIC_URL + \"/\"} component={Main} />\r\n          <Route\r\n            exact\r\n            path={process.env.PUBLIC_URL + \"/\" + AppPages.ABOUT}\r\n            component={About}\r\n          />\r\n          <Route\r\n            exact\r\n            path={process.env.PUBLIC_URL + \"/\" + AppPages.MARKET + \"/:id/:name\"}\r\n            component={(props: any) => <Market {...props} />}\r\n          />\r\n          <Route\r\n            exact\r\n            path={\r\n              process.env.PUBLIC_URL + \"/\" + AppPages.PRODUCT + \"/:id/:name\"\r\n            }\r\n            component={(props: any) => <Product {...props} />}\r\n          />\r\n          <Route\r\n            exact\r\n            path={process.env.PUBLIC_URL + \"/\" + AppPages.SOON}\r\n            component={Soon}\r\n          />\r\n          <Route\r\n            exact\r\n            path={process.env.PUBLIC_URL + \"/\" + AppPages.CHECKOUT}\r\n            component={Checkout}\r\n          />\r\n          <Route\r\n            exact\r\n            path={process.env.PUBLIC_URL + \"/\" + AppPages.ADDRESS}\r\n            component={Address}\r\n          />\r\n          <Route component={NotFound} />\r\n        </Switch>\r\n      </section>\r\n      {/* <footer>\r\n        <p>footer</p>\r\n      </footer> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (State: { app: IAppState; shop: IShopState }) => ({\r\n  // cart: State.shop.cart\r\n  tabId: State.app.pageId\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  // changePage: changePage\r\n  changePage: (url: string) => push(url)\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App);\r\n\r\n// https://reacttraining.com/react-router/web/guides/basic-components\r\n\r\n// https://github.com/material-components/material-components-web-react\r\n// https://react-mdc.github.io/#/\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { ActionTypes } from \"../actions/actionTypes\";\r\nimport { IAppState, INITIAL_APPSTATE } from \"./app\";\r\nimport { Reducer } from \"redux\";\r\n\r\nconst AppReducer: Reducer<IAppState, { type: any; payload: any }> = (\r\n  state = INITIAL_APPSTATE,\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ActionTypes.CHANGE_PAGE:\r\n      const newPage: any = action.payload.newPage;\r\n      return {\r\n        ...state,\r\n        pageName: newPage\r\n      };\r\n    case ActionTypes.CHANGE_TAB_ID:\r\n      const tabId: number = action.payload.tabId;\r\n      return {\r\n        ...state,\r\n        tabId: tabId\r\n      };\r\n    //     case UPDATE_PAGE:\r\n    //       return {\r\n    //         ...state,\r\n    //         page: action.page,\r\n    //         pageName: action.pageName\r\n    //       };\r\n    //     case UPDATE_OFFLINE:\r\n    //       return {\r\n    //         ...state,\r\n    //         offline: action.offline\r\n    //       };\r\n    //     case UPDATE_DRAWER_STATE:\r\n    //       return {\r\n    //         ...state,\r\n    //         drawerOpened: action.opened\r\n    //       };\r\n    //     case OPEN_SNACKBAR:\r\n    //       return {\r\n    //         ...state,\r\n    //         snackbarOpened: true\r\n    //       };\r\n    //     case CLOSE_SNACKBAR:\r\n    //       return {\r\n    //         ...state,\r\n    //         snackbarOpened: false\r\n    //       };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default AppReducer;\r\n","import moment from \"moment\";\r\nimport { Moment } from \"moment-jalaali\";\r\nimport { IDbInfo } from \"../actions/shop\";\r\n\r\nexport interface IShopState {\r\n  dbInfo?: IDbInfo;\r\n\r\n  // products: IProductsState;\r\n  cart: ICartState;\r\n  deliver: IDeliverState;\r\n  error: string;\r\n\r\n  lastMarketId?: number;\r\n  loadingDbInfo: boolean;\r\n}\r\n\r\nexport interface IProductsState {\r\n  [index: string]: IProductState;\r\n}\r\n\r\nexport interface IProductState {\r\n  id: number;\r\n  title: string;\r\n  price: number;\r\n  max: number;\r\n  img: string;\r\n  enable: boolean;\r\n}\r\n\r\nexport interface ICartState {\r\n  [index: string]: number;\r\n}\r\n\r\nexport interface ICartItem {\r\n  id: number;\r\n  title: string;\r\n  amount: number;\r\n  price: number;\r\n}\r\n\r\nexport interface IDeliverState {\r\n  deliverKind: string;\r\n  deliverDistrict: string;\r\n\r\n  mobile: string;\r\n  fullname: string;\r\n  address: string;\r\n\r\n  location?: Position;\r\n  date: Moment;\r\n  time: string;\r\n\r\n  loadingInfo: boolean;\r\n  loadingLocation: boolean;\r\n  // sendingCart:boolean;\r\n}\r\n\r\nexport const INITIAL_SHOPSTATE: IShopState = {\r\n  dbInfo: undefined,\r\n  // products: {},\r\n  cart: {},\r\n  deliver: {\r\n    deliverKind: \"\",\r\n    deliverDistrict: \"\",\r\n    fullname: \"\",\r\n    address: \"\",\r\n    mobile: \"\",\r\n    date: moment(),\r\n    time: \"\",\r\n    loadingInfo: false,\r\n    loadingLocation: false\r\n    // , sendingCart:false\r\n  },\r\n  error: \"\",\r\n\r\n  lastMarketId: undefined,\r\n  loadingDbInfo: false\r\n};\r\n","import { ActionTypes } from \"../actions/actionTypes\";\r\nimport { Reducer } from \"redux\";\r\nimport {\r\n  IShopState,\r\n  INITIAL_SHOPSTATE,\r\n  ICartState,\r\n  IDeliverState\r\n} from \"./shop\";\r\n\r\nconst ShopReducer: Reducer<IShopState, { type: any; payload: any }> = (\r\n  state = INITIAL_SHOPSTATE,\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ActionTypes.CHANGE_PAGE:\r\n      const newPage: any = action.payload.newPage;\r\n      return {\r\n        ...state,\r\n        pageName: newPage\r\n      };\r\n\r\n    case ActionTypes.ADD_TO_CART:\r\n      return {\r\n        ...state,\r\n        lastMarketId: action.payload.marketId,\r\n        // products: state.products,\r\n        cart: cart(state.cart, action)\r\n        // deliver: state.deliver,\r\n        // error: state.error\r\n      };\r\n    case ActionTypes.REMOVE_FROM_CART:\r\n      return {\r\n        ...state,\r\n        // lastMarketId:MarketId(action),\r\n        // products: state.products,\r\n        cart: cart(state.cart, action)\r\n        // deliver: state.deliver,\r\n        // error: state.error\r\n      };\r\n\r\n    case ActionTypes.TRY_LOADING_INIT:\r\n      return {\r\n        ...state,\r\n        loadingDbInfo: true\r\n      };\r\n    case ActionTypes.SUCCESS_LOAD_INIT:\r\n      return {\r\n        ...state,\r\n        dbInfo: action.payload.info,\r\n        loadingDbInfo: false\r\n      };\r\n    case ActionTypes.FAILED_LOAD_INIT:\r\n      return {\r\n        ...state,\r\n        loadingDbInfo: false\r\n      };\r\n\r\n    case ActionTypes.CHANGE_DELIVERKIND:\r\n    case ActionTypes.CHANGE_DELIVERDISTRICT:\r\n    case ActionTypes.CHANGE_MOBILE:\r\n    case ActionTypes.CHANGE_FULLNAME:\r\n    case ActionTypes.CHANGE_ADDRESS:\r\n    case ActionTypes.TRY_LOADING_USER_INFO:\r\n    case ActionTypes.SUCCESS_LOAD_USER_INFO:\r\n    case ActionTypes.FAILED_LOAD_USER_INFO:\r\n    case ActionTypes.TRY_LOADING_LOCATION:\r\n    case ActionTypes.SUCCESS_LOAD_LOCATION:\r\n    case ActionTypes.FAILED_LOAD_LOCATION:\r\n      return {\r\n        ...state,\r\n        // lastMarketId:MarketId(action),\r\n        // products: state.products,\r\n        // cart: cart(state.cart, action),\r\n        deliver: deliver(state.deliver, action)\r\n        // error: state.error\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst cart: any = (state: ICartState, action: { type: any; payload: any }) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_TO_CART:\r\n      const addId: string = action.payload.productId;\r\n      // check max\r\n      // const quant = (state[addId] || 0);\r\n      // const prod = PRODUCT_LIST.find(x=>x.id === addId);\r\n      // const max = prod!==undefined ? prod.max : undefined;\r\n      // if(max !== undefined && quant>=max){\r\n      //   return {\r\n      //     ...state,\r\n      //     [addId]: max\r\n      //   };\r\n      // }\r\n      return {\r\n        ...state,\r\n        [addId]: (state[addId] || 0) + 1\r\n      };\r\n\r\n    case ActionTypes.REMOVE_FROM_CART:\r\n      const removeId: string = action.payload.productId;\r\n      const quantity: number = (state[removeId] || 0) - 1;\r\n      if (quantity <= 0) {\r\n        const newState: ICartState = { ...state };\r\n        delete newState[removeId];\r\n        return newState;\r\n      } else {\r\n        return {\r\n          ...state,\r\n          [removeId]: quantity\r\n        };\r\n      }\r\n\r\n    // case CHECKOUT_SUCCESS:\r\n    //   return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst deliver: any = (\r\n  state: IDeliverState,\r\n  action: { type: any; payload: any }\r\n) => {\r\n  switch (action.type) {\r\n    case ActionTypes.CHANGE_DELIVERKIND:\r\n      const deliverKind: string = action.payload.deliverKind;\r\n      return {\r\n        ...state,\r\n        deliverKind: deliverKind\r\n      };\r\n\r\n    case ActionTypes.CHANGE_DELIVERDISTRICT:\r\n      const deliverDistrict: string = action.payload.deliverDistrict;\r\n      return {\r\n        ...state,\r\n        deliverDistrict: deliverDistrict\r\n      };\r\n\r\n    case ActionTypes.CHANGE_MOBILE:\r\n      const mobile: string = action.payload.mobile;\r\n      return {\r\n        ...state,\r\n        mobile: mobile\r\n      };\r\n\r\n    case ActionTypes.CHANGE_FULLNAME:\r\n      const fullname: string = action.payload.fullname;\r\n      return {\r\n        ...state,\r\n        fullname: fullname\r\n      };\r\n\r\n    case ActionTypes.CHANGE_ADDRESS:\r\n      const address: string = action.payload.address;\r\n      return {\r\n        ...state,\r\n        address: address\r\n      };\r\n\r\n    case ActionTypes.TRY_LOADING_USER_INFO:\r\n      return {\r\n        ...state,\r\n        loadingInfo: true\r\n      };\r\n    case ActionTypes.SUCCESS_LOAD_USER_INFO:\r\n      const fullname1: string = action.payload.fullname;\r\n      const address1: string = action.payload.address;\r\n      const district1: string = action.payload.district;\r\n      return {\r\n        ...state,\r\n        fullname: fullname1,\r\n        address: address1,\r\n        deliverDistrict: district1,\r\n        loadingInfo: false\r\n      };\r\n    case ActionTypes.FAILED_LOAD_USER_INFO:\r\n      console.log(action.payload.error);\r\n      return {\r\n        ...state,\r\n        loadingInfo: false\r\n      };\r\n    case ActionTypes.TRY_LOADING_LOCATION:\r\n      return {\r\n        ...state,\r\n        loadinglocation: true\r\n      };\r\n    case ActionTypes.SUCCESS_LOAD_LOCATION:\r\n      const address2: string = action.payload.address;\r\n      const location: Position = action.payload.location;\r\n      return {\r\n        ...state,\r\n        address: address2,\r\n        location: location,\r\n        loadinglocation: false\r\n      };\r\n    case ActionTypes.FAILED_LOAD_LOCATION:\r\n      console.log(action.payload.error);\r\n      return {\r\n        ...state,\r\n        loadinglocation: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default ShopReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport { connectRouter } from 'connected-react-router'\r\n\r\nimport AppReducer from \"./appReducer\";\r\nimport ShopReducer from \"./shopReducer\";\r\n\r\nconst createRootReducer = (history:any) => combineReducers({\r\n  router: connectRouter(history),\r\n  app: AppReducer,\r\n  shop: ShopReducer,\r\n})\r\nexport default createRootReducer\r\n","import { createBrowserHistory } from \"history\";\r\nimport { applyMiddleware, createStore } from \"redux\";\r\nimport { routerMiddleware } from \"connected-react-router\";\r\nimport thunk from \"redux-thunk\";\r\nimport createRootReducer from \"../reducers/rootReducer\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nexport default function configureStore(initialState: any) {\r\n  const store = createStore(\r\n    createRootReducer(history), // root reducer with router state\r\n    initialState,\r\n    composeWithDevTools(\r\n      applyMiddleware(\r\n        routerMiddleware(history), // for dispatching history actions\r\n        thunk\r\n        // ... other middlewares ...\r\n      )\r\n    )\r\n  );\r\n\r\n  return store;\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./index.css\";\r\n\r\nimport App from \"./components/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { ConnectedRouter } from \"connected-react-router\";\r\nimport configureStore, { history } from \"./store/configureStore\";\r\n\r\nconst store = configureStore({} /* provide initial state if any */);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ConnectedRouter history={history}>\r\n      {/* place ConnectedRouter under Provider */}\r\n      <>\r\n        {/* your usual react-router v4/v5 routing */}\r\n        {/* <Switch>\r\n          <Route exact path=\"/\" render={() => (<div>Match</div>)} />\r\n          <Route render={() => (<div>Miss</div>)} />\r\n        </Switch>*/}\r\n        <App />\r\n      </>\r\n    </ConnectedRouter>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// serviceWorker.unregister();\r\nserviceWorker.register();\r\n"],"sourceRoot":""}